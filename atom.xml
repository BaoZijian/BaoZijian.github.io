<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Tecooler means (Technology is cool)</title>
  <subtitle>CCIE#48983 | 七牛云存储 | 打羽毛球喜欢勾对角 | 淡口味的小清新，嗜甜 | 对麻将和三国杀有不可逾越的认知障碍</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.bz1.me/"/>
  <updated>2016-12-16T14:14:13.000Z</updated>
  <id>https://www.bz1.me/</id>
  
  <author>
    <name>BaoZijian</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo部署至七牛之一键操作</title>
    <link href="https://www.bz1.me/hexo%E9%83%A8%E7%BD%B2%E8%87%B3%E4%B8%83%E7%89%9B%E4%B9%8B%E4%B8%80%E9%94%AE%E6%93%8D%E4%BD%9C.html"/>
    <id>https://www.bz1.me/hexo部署至七牛之一键操作.html</id>
    <published>2016-12-16T14:14:13.000Z</published>
    <updated>2016-12-16T14:14:13.000Z</updated>
    
    <content type="html"><![CDATA[<p>吐槽：</p>
<ul>
<li>每次部署都要敲那么多命令，真的是心都累了</li>
<li>七牛所有资源默认走 CDN 加速，静态博客又想缓存，部署过后又不想缓存，真是烦</li>
<li>不行，逼格还是不够高</li>
</ul>
<h3 id="开始动手"><a href="#开始动手" class="headerlink" title="开始动手"></a>开始动手</h3><h4 id="先看效果"><a href="#先看效果" class="headerlink" title="先看效果"></a>先看效果</h4><p><img src="https://up.bz1.me/hello6.gif" alt="gif"></p>
<h4 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h4><p>已经能够成功部署上传至七牛的操作，参考<a href="https://www.bz1.me/%E5%B9%B3%E5%8F%B0%E9%83%A8%E7%BD%B2hexo%E4%B9%8B%E3%80%8E%E4%B8%83%E7%89%9B%E4%BA%91%E5%AD%98%E5%82%A8%E3%80%8F.html">平台部署hexo之『七牛云存储』</a></p>
<h4 id="脚本完成功能如下"><a href="#脚本完成功能如下" class="headerlink" title="脚本完成功能如下"></a>脚本完成功能如下</h4><ul>
<li>本地生成静态页面</li>
<li>同步本地静态文件至七牛</li>
<li>刷新七牛 CDN 缓存</li>
</ul>
<h4 id="脚本如下"><a href="#脚本如下" class="headerlink" title="脚本如下"></a>脚本如下</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line"><span class="comment"># 本地部署</span></div><div class="line">hexo clean</div><div class="line">hexo g</div><div class="line"><span class="built_in">echo</span> <span class="string">""</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"本地页面生成成功!"</span></div><div class="line"><span class="built_in">echo</span> <span class="string">""</span> </div><div class="line"><span class="comment"># qshell 同步静态文件到七牛</span></div><div class="line">qshell qupload /Users/Baozi/Documents/hexo/newblog/hexoup_conf.txt</div><div class="line"><span class="built_in">echo</span> <span class="string">""</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"上传结束，正在刷新缓存..."</span></div><div class="line"><span class="built_in">echo</span> <span class="string">""</span></div><div class="line"><span class="built_in">echo</span> <span class="string">""</span></div><div class="line"><span class="comment"># 刷新 CDN 缓存</span></div><div class="line">ak=<span class="string">"①这里填写七牛的AccessKey"</span></div><div class="line">token=$(<span class="built_in">echo</span> <span class="string">"/v2/tune/refresh"</span> |openssl dgst -binary -hmac <span class="string">"②这里填写你的SecretKey"</span> -sha1 |base64 |tr <span class="string">"+/"</span> <span class="string">"-_"</span>)</div><div class="line">result=$(curl -X POST -H <span class="string">"Authorization: QBox <span class="variable">$ak</span>:<span class="variable">$token</span>"</span> http://fusion.qiniuapi.com/v2/tune/refresh <span class="_">-d</span> <span class="string">'&#123;"urls":["③这里填写你的主页"]&#125;'</span> -H <span class="string">'Content-Type: application/json'</span>)</div><div class="line">code=$(<span class="built_in">echo</span> <span class="variable">$result</span> | awk -F <span class="string">','</span> <span class="string">'&#123;print $1&#125;'</span> | awk -F <span class="string">':'</span> <span class="string">'&#123;print $2&#125;'</span>)</div><div class="line">urlSurplusDay=$(<span class="built_in">echo</span> <span class="variable">$result</span> | awk -F <span class="string">'urlSurplusDay'</span> <span class="string">'&#123;print $2&#125;'</span> | awk -F <span class="string">'":'</span> <span class="string">'&#123;print $2&#125;'</span> | awk -F <span class="string">','</span> <span class="string">'&#123;print $1&#125;'</span>)</div><div class="line"><span class="keyword">if</span> [[ <span class="variable">$code</span> = 200 ]]; <span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"----------------------------------"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"刷新成功!"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"本日剩余刷新次数为<span class="variable">$urlSurplusDay</span>"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"----------------------------------"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"欢迎访问:"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"④这里填写你的主页地址"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">""</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"⑤这里填写你的主页地址"</span> | pbcopy</div><div class="line"><span class="keyword">elif</span> [[ <span class="variable">$code</span> = 400031 ]]; <span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"请求中存在无效的 url，请确保 url 格式正确"</span></div><div class="line"><span class="keyword">elif</span> [[ <span class="variable">$code</span> = 400032 ]]; <span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"请求中存在无效的域名，请确保域名格式正确"</span></div><div class="line"><span class="keyword">elif</span> [[ <span class="variable">$code</span> = 400034 ]]; <span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"请求次数超出当日刷新限额,请联系七牛技术支持"</span></div><div class="line"><span class="keyword">elif</span> [[ <span class="variable">$code</span> = 400036 ]]; <span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"无效的请求 id"</span></div><div class="line"><span class="keyword">elif</span> [[ <span class="variable">$code</span> = 400037 ]]; <span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"url 正在刷新中"</span></div><div class="line"><span class="keyword">elif</span> [[ <span class="variable">$code</span> = 500000 ]]; <span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"服务端内部错误，请联系技术支持"</span></div><div class="line"><span class="keyword">else</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"未知错误，你脚本有问题！"</span></div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;吐槽：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每次部署都要敲那么多命令，真的是心都累了&lt;/li&gt;
&lt;li&gt;七牛所有资源默认走 CDN 加速，静态博客又想缓存，部署过后又不想缓存，真是烦&lt;/li&gt;
&lt;li&gt;不行，逼格还是不够高&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;开始动手&quot;&gt;&lt;a hr
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="qiniu" scheme="https://www.bz1.me/tags/qiniu/"/>
    
      <category term="hexo" scheme="https://www.bz1.me/tags/hexo/"/>
    
      <category term="bash shell" scheme="https://www.bz1.me/tags/bash-shell/"/>
    
  </entry>
  
  <entry>
    <title>关于七牛各种demo汇总</title>
    <link href="https://www.bz1.me/%E5%85%B3%E4%BA%8E%E4%B8%83%E7%89%9B%E5%90%84%E7%A7%8Ddemo%E6%B1%87%E6%80%BB.html"/>
    <id>https://www.bz1.me/关于七牛各种demo汇总.html</id>
    <published>2016-12-16T07:58:13.000Z</published>
    <updated>2016-12-16T07:58:13.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>平台部署hexo之『VPS服务器』</title>
    <link href="https://www.bz1.me/%E5%B9%B3%E5%8F%B0%E9%83%A8%E7%BD%B2hexo%E4%B9%8B%E3%80%8EVPS%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%8F.html"/>
    <id>https://www.bz1.me/平台部署hexo之『VPS服务器』.html</id>
    <published>2016-12-15T15:07:12.000Z</published>
    <updated>2016-12-15T15:07:12.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>平台部署hexo之『七牛云存储』</title>
    <link href="https://www.bz1.me/%E5%B9%B3%E5%8F%B0%E9%83%A8%E7%BD%B2hexo%E4%B9%8B%E3%80%8E%E4%B8%83%E7%89%9B%E4%BA%91%E5%AD%98%E5%82%A8%E3%80%8F.html"/>
    <id>https://www.bz1.me/平台部署hexo之『七牛云存储』.html</id>
    <published>2016-12-15T15:05:54.000Z</published>
    <updated>2016-12-15T15:05:54.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>按照道理，我先来扯一堆没用的东西</p>
<p>最近准备开始学习写博客，写博客首先就是考虑博客的托管，是在什么地方写好呢？尝试了很多，比如 CSDN、博客园、简书等等，再早一些还玩过 wordpress，但是总觉得不够好用，也不够美观(可能是我比较挑剔，说白了就是事儿多)。后来接触到了 hexo，真心简洁美观，一眼看到就定心里去了，于是乎着手搞了起来…</p>
<p>最开始跟着<a href="https://hexo.io/docs/" target="_blank" rel="external">官网教程</a>，读了半天也没看懂到底是怎么一个逻辑，后来 google 查了好久才知道原来是<code>本地生成静态页面，然后 push 到 github</code>，了解这个，就跟着教程和 google 来的大神一步步做，很快也就部署上去了，部署置 github 的过程我就不说了，直接贴其他博主的外链供参考吧，都是溜溜的</p>
<ul>
<li><a href="http://www.cylong.com/blog/2016/04/19/hexo-git/" target="_blank" rel="external">笑话人生</a></li>
<li><a href="http://ehlxr.me/2016/07/23/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/" target="_blank" rel="external">Ehlxr’s Blog</a><a id="more"></a>
<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2>既然是本地生成的静态页面，可以用 <code>hexo d -g</code> 部署到 github 上面，那当然可以部署到其他的云平台上了，只不过 hexo 不支持直接部署非 git 平台，那么解决方式我这边有两种：</li>
<li>本地生成静态页面，push 到七牛云存储</li>
<li>在 VPS 上搭建 git 服务器，然后将部署位置指向 vps 的 git 服务器上</li>
</ul>
<blockquote>
<p>为啥选择七牛？</p>
<ul>
<li>七牛在功能特性上，一直在引领云存储的潮流。我们试图改变云存储，让她更加人性化，更加好用。</li>
<li>特有的上传加速能力。其他云存储通常只加速下载（CDN）。有的号称支持上传加速，其实也就只是做了上传的代理节点。但是七牛是全球首家采用多IDC架构的分布式存储。数据就近上传到某个IDC即落地，真正加速到极致。</li>
<li>特有的断点续上传功能。不再需要网络不行时在那一遍遍从头再来。无论网络多糟糕（尤其是3G/2G移动网络）、无论文件多大，我们都能够保证让你的数据到达服务器。这个在国内仍然没有其他云存储能够做到。</li>
<li>CDN整合。七牛目前整合了包括蓝汛、网宿在内的多家 CDN，总节点数已经超过 1000 个IDC，这让自建 CDN 望尘莫及。我们不重新发明轮子。但我们要让 CDN 从高端走向平民。为什么只能大公司才能享受 CDN 带来的好处？有了七牛，你就是个博客主也可以享受高品质的快感。七牛还帮你做了智能的 CDN 品质监测。万一某家 CDN 出现局部节点问题时，七牛还能够自动帮你把该区域切换到另一家 CDN，整个过程透明，让你省时省心。</li>
<li>独特的镜像存储，体验七牛云存储只需一键。</li>
<li>流媒体（音视频处理）支持。这个目前国内云存储也是首家。悄悄告诉你，最近音视频支持还会重大更新哦。</li>
<li>数据处理功能的级联（也就是管道）。图片先缩略再打水印，是管道功能的典型案例。</li>
<li>大文件支持。七牛云存储单文件最大支持到1TB。<br>更多特性介绍，请访问 <a href="http://www.qiniu.com/" target="_blank" rel="external">http://www.qiniu.com/</a>, <a href="http://docs.qiniu.com/" target="_blank" rel="external">http://docs.qiniu.com/</a> 。也可以到 <a href="https://portal.qiniu.com/" target="_blank" rel="external">https://portal.qiniu.com/</a> 直接来体验。</li>
<li>七牛还提供免费的 10G 存储和 10G 免费下载流量，每个月都有哦。</li>
<li>七牛还是强大的服务支持团队，电话或者工单直接处理问题。</li>
</ul>
</blockquote>
<h2 id="配置过程"><a href="#配置过程" class="headerlink" title="配置过程"></a>配置过程</h2><h3 id="静态文件生成位置"><a href="#静态文件生成位置" class="headerlink" title="静态文件生成位置"></a>静态文件生成位置</h3><p>首先进入到我们的博客文件夹，我的是在<code>~/Document/hexo/newblog</code><br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">cd ~/Document/hexo/<span class="keyword">new</span><span class="type">blog</span></div><div class="line"></div><div class="line">hexo clean</div><div class="line"></div><div class="line">hexo d</div></pre></td></tr></table></figure></p>
<p>执行完成之后，会在当前目录下发现一个<code>public/</code>的文件夹，这个文件夹里都是<code>.html</code>的静态博客页面</p>
<h3 id="如何上传到七牛"><a href="#如何上传到七牛" class="headerlink" title="如何上传到七牛"></a>如何上传到七牛</h3><h4 id="首先注册七牛账号"><a href="#首先注册七牛账号" class="headerlink" title="首先注册七牛账号"></a>首先注册七牛账号</h4><p><img src="https://upload.bz1.me/portal.png" alt=""><br><a href="https://portal.qiniu.com/signup/choice" target="_blank" rel="external">七牛传送门,点我直接进入七牛注册页面</a></p>
<p><img src="https://upload.bz1.me/portal2.png" alt=""><br>按照填写后，需要登录自己的邮箱进行激活，如果邮箱内找不到邮件，可以去垃圾箱看看，如果垃圾箱也没有，一般可能是邮件发送你的邮箱失败，被拒绝或者其他原因，此时可以拨打 400-808-9176 激活，或者提交一个<a href="https://support.qiniu.com/question" target="_blank" rel="external">工单</a>来激活。</p>
<h4 id="实名认证"><a href="#实名认证" class="headerlink" title="实名认证"></a>实名认证</h4><p>⭐️ 必须要实名认证，否则只有 1G 免费额度，上传文件类型也会有限制，否则报错 “limited mimeType”</p>
<h4 id="创建对象存储空间"><a href="#创建对象存储空间" class="headerlink" title="创建对象存储空间"></a>创建对象存储空间</h4><p>存储空间在七牛，称为<code>bucket</code>，我们需要先新建一个<code>bucket</code><br><img src="https://upload.bz1.me/portal_create.png" alt=""></p>
<p><img src="https://upload.bz1.me/portal_bucket1.png" alt=""><br>这里创建好之后，东西就可以往这个地方进行存储了。</p>
<h4 id="测试一下上传"><a href="#测试一下上传" class="headerlink" title="测试一下上传"></a>测试一下上传</h4><p>点击<code>更多操作</code>–&gt;<code>内容管理</code><br><img src="https://upload.bz1.me/portal_neirong.png" alt=""></p>
<p>点击<code>上传文件</code>随便选择本地的一个<code>小于500M</code>的文件来上传至七牛<br><img src="https://upload.bz1.me/portal_upload.png" alt=""></p>
<p>上传一个文件到七牛<br><img src="https://upload.bz1.me/portal_upload2.png" alt=""></p>
<p>这个时候在七牛的存储空间就看到了这个文件，点击<code>复制外链</code>，然后复制贴进浏览器访问<br><img src="https://upload.bz1.me/portal_upload3.png" alt="空间截图"><br><img src="https://upload.bz1.me/portal_upload4.png" alt="safri访问截图"></p>
<p>如果访问成功，说明你可以正常使用七牛的云存储服务了。</p>
<h4 id="用命令行实现批量上传"><a href="#用命令行实现批量上传" class="headerlink" title="用命令行实现批量上传"></a>用命令行实现批量上传</h4><p>那么前端这样一个一个传到七牛，或者批量全选，把<code>public/</code>文件夹的所有内容在页面上批量选中上传，是不是一点都不酷，写个博客还要手动到这里上传，不愿意这么做，那么还是有什么方式上传到七牛呢？</p>
<ul>
<li><a href="http://developer.qiniu.com/resource/official.html#sdk" target="_blank" rel="external">sdk上传</a></li>
<li><a href="http://developer.qiniu.com/code/v6/tool/qshell.html" target="_blank" rel="external">工具上传</a><br>这里，我们推荐使用工具上传，第一节省了 sdk 开发时间(想搞的话也是墙裂推荐的)，第二用的命令行工具上传，速度快而且功能强大，七牛提供各种上传工具，本人比较偏向 qshell 工具，这里推荐 qshell</li>
</ul>
<h5 id="qshell工具下载"><a href="#qshell工具下载" class="headerlink" title="qshell工具下载"></a>qshell工具下载</h5><ul>
<li><a href="https://upload.bz1.me/qshell" target="_blank" rel="external">mac版本</a></li>
<li><a href="https://upload.bz1.me/qshell-ubuntu" target="_blank" rel="external">ubuntu&amp;centos版本</a></li>
</ul>
<h5 id="qshell工具配置"><a href="#qshell工具配置" class="headerlink" title="qshell工具配置"></a>qshell工具配置</h5><p>先本地下载 qshell<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">wget</span> <span class="string">'https://upload.bz1.me/qshell'</span></div></pre></td></tr></table></figure></p>
<p>修改一下工具权限<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chmod <span class="number">755</span> qshell</div></pre></td></tr></table></figure></p>
<p>放到环境变量中<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv qshell <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span></div></pre></td></tr></table></figure></p>
<p>新建一个<code>terminal</code>窗口<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">qshell -h</span></div></pre></td></tr></table></figure></p>
<p>如果看到如下界面，证明可用了<br><img src="https://upload.bz1.me/portal_qshell.png" alt=""></p>
<p>登陆 qshell这里的 <code>AK</code> <code>SK</code> 在七牛控制台的个人面板中获取<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">qshell account <span class="tag">&lt;<span class="name">AK</span>&gt;</span> <span class="tag">&lt;<span class="name">SK</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p><code>AK</code> <code>SK</code> 位置截图如下<br><img src="https://upload.bz1.me/portal_akskmi.png" alt=""><br><img src="https://upload.bz1.me/portal_aksk2.png" alt="aksk"></p>
<p>然后查看下登陆<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">qshell account</span></div></pre></td></tr></table></figure></p>
<p>正确的就是个效果<br><img src="https://upload.bz1.me/portal_aksk3.png" alt=""></p>
<h5 id="qshell部署你的博客进入七牛空间"><a href="#qshell部署你的博客进入七牛空间" class="headerlink" title="qshell部署你的博客进入七牛空间"></a>qshell部署你的博客进入七牛空间</h5><p>然后进入你的 <code>public/</code>的文件夹，并新建一个 qshell 上传批量上传的配置文件(用来告诉 qshell，上传哪些文件，有哪些上传策略)<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd ~/Document/hexo/<span class="keyword">new</span><span class="type">blog</span></div><div class="line"></div><div class="line">touch upload.txt</div></pre></td></tr></table></figure></p>
<p>编辑<code>upload.txt</code>文件，按照我的配置来就可以基本事件覆盖重写等规则，详细的可以参考，<a href="https://github.com/qiniu/qshell/wiki/qupload" target="_blank" rel="external">qupload</a><br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">vim</span> <span class="selector-tag">upload</span><span class="selector-class">.txt</span></div></pre></td></tr></table></figure></p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">   <span class="attr">"src_dir"</span>            :   <span class="string">"这里填写public在本地的绝对路径"</span>,</div><div class="line">   <span class="attr">"access_key"</span>         :   <span class="string">"这里填写AK"</span>,</div><div class="line">   <span class="attr">"secret_key"</span>         :   <span class="string">"这里填写SK"</span>,</div><div class="line">   <span class="attr">"bucket"</span>             :   <span class="string">"这里填写七牛存储空间名，刚才我新建的叫做myblog"</span>,</div><div class="line">   <span class="attr">"zone"</span>               :   <span class="string">"nb"</span>,</div><div class="line">   <span class="attr">"ignore_dir"</span>         :   <span class="literal">false</span>,</div><div class="line">   <span class="attr">"overwrite"</span>          :   <span class="literal">true</span>,</div><div class="line">   <span class="attr">"check_exists"</span>       :   <span class="literal">false</span>,</div><div class="line">   <span class="attr">"rescan_local"</span>       :   <span class="literal">true</span>,</div><div class="line">   <span class="attr">"check_hash"</span>         :   <span class="literal">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>编辑好之后保存，然后本地先生成静态文件<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">hexo clean</span></div><div class="line"></div><div class="line">hexo deploy</div></pre></td></tr></table></figure></p>
<p>生成好之后，执行上传命令<br><figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">qshell</span> <span class="selector-tag">qupload</span> <span class="selector-tag">upload</span><span class="selector-class">.txt</span></div></pre></td></tr></table></figure></p>
<p>看到这个样子，发现总共 n 个文件，成功了 n 个文件，失败 0 个，就 ok 了</p>
<ul>
<li>如果报错”limited mimeType”,请先实名认证，文件类型上传有限制。<br><img src="https://upload.bz1.me/portal_qupload.png" alt=""></li>
</ul>
<h3 id="细节修改和测试"><a href="#细节修改和测试" class="headerlink" title="细节修改和测试"></a>细节修改和测试</h3><p>然后我们需要到七牛修改一下默认首页显示，因为七牛空间允许存在无命名的空文件，一般我们都知道访问一个站点的时候，虽然输入网址是 <a href="https://www.bz1.me/，实际上访问的是">https://www.bz1.me/，实际上访问的是</a> <a href="https://www.bz1.me/index.html">https://www.bz1.me/index.html</a><br><img src="https://upload.bz1.me/portal_kjsz.png" alt=""><br><img src="https://upload.bz1.me/portal_index.png" alt=""><br>开启之后，就可以用空间自带的测试域名对博客进行访问啦，域名在这里<br><img src="https://upload.bz1.me/portal_ceshiyuming.png" alt=""><br>然后到浏览器中，直接将测试域名贴进去，访问看看<br><img src="https://upload.bz1.me/portal_blogcesh.png" alt=""></p>
<h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><ul>
<li><a href="">一键部署并刷新 CDN 缓存</a></li>
<li>自定义域名，使用 cdn.bz1.me 访问</li>
<li>https 支持，使用 <a href="https://www.bz1.me">https://www.bz1.me</a> 访问</li>
<li>阅读次数统计</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;按照道理，我先来扯一堆没用的东西&lt;/p&gt;
&lt;p&gt;最近准备开始学习写博客，写博客首先就是考虑博客的托管，是在什么地方写好呢？尝试了很多，比如 CSDN、博客园、简书等等，再早一些还玩过 wordpress，但是总觉得不够好用，也不够美观(可能是我比较挑剔，说白了就是事儿多)。后来接触到了 hexo，真心简洁美观，一眼看到就定心里去了，于是乎着手搞了起来…&lt;/p&gt;
&lt;p&gt;最开始跟着&lt;a href=&quot;https://hexo.io/docs/&quot;&gt;官网教程&lt;/a&gt;，读了半天也没看懂到底是怎么一个逻辑，后来 google 查了好久才知道原来是&lt;code&gt;本地生成静态页面，然后 push 到 github&lt;/code&gt;，了解这个，就跟着教程和 google 来的大神一步步做，很快也就部署上去了，部署置 github 的过程我就不说了，直接贴其他博主的外链供参考吧，都是溜溜的&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cylong.com/blog/2016/04/19/hexo-git/&quot;&gt;笑话人生&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ehlxr.me/2016/07/23/%E4%BD%BF%E7%94%A8Hexo%E5%9F%BA%E4%BA%8EGitHub-Pages%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89/&quot;&gt;Ehlxr’s Blog&lt;/a&gt;
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="hexo" scheme="https://www.bz1.me/tags/hexo/"/>
    
      <category term="qshell" scheme="https://www.bz1.me/tags/qshell/"/>
    
  </entry>
  
  <entry>
    <title>关于七牛推拉流地址</title>
    <link href="https://www.bz1.me/%E5%85%B3%E4%BA%8E%E4%B8%83%E7%89%9B%E6%8E%A8%E6%8B%89%E6%B5%81%E5%9C%B0%E5%9D%80.html"/>
    <id>https://www.bz1.me/关于七牛推拉流地址.html</id>
    <published>2016-12-15T02:41:00.000Z</published>
    <updated>2016-12-16T07:24:27.000Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>publish-domain : pili-publish.baozijian.cc</li>
<li>rtmp-pull-domain : pili-live-rtmp.baozijian.cc</li>
<li>hls-pull-domain : pili-live-hls.baozijian.cc</li>
<li>flv-pull-domain : pili-live-hdl.baozijian.cc</li>
<li>hub : tron</li>
<li>title : baozijian</li>
<li>key : baozijian</li>
</ul>
<h3 id="关于七牛的推流地址"><a href="#关于七牛的推流地址" class="headerlink" title="关于七牛的推流地址"></a>关于七牛的推流地址</h3><p>静态鉴权推流地址举例<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rtmp:<span class="regexp">//</span>pili-publish.baozijian.cc<span class="regexp">/tron/</span>baozijian?key=baozijian</div></pre></td></tr></table></figure></p>
<p>其他格式鉴权播放地址格式请参考：<a href="https://www.bz1.me/%E4%B8%83%E7%89%9B%E7%9B%B4%E6%92%AD%E6%8E%A8%E6%B5%81%E9%89%B4%E6%9D%83.html">七牛直播推流鉴权</a></p>
<p>这个推流地址是有固定的组成格式，格式如下<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rtmp://<span class="tag">&lt;<span class="name">publish-domain</span>&gt;</span>/<span class="tag">&lt;<span class="name">hub</span>&gt;</span>/<span class="tag">&lt;<span class="name">tilte</span>&gt;</span>?key=<span class="tag">&lt;<span class="name">key</span>&gt;</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<h3 id="关于七牛的拉流地址"><a href="#关于七牛的拉流地址" class="headerlink" title="关于七牛的拉流地址"></a>关于七牛的拉流地址</h3><p>播放地址举例<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># rtmp 播放地址：</span></div><div class="line">rtmp:<span class="regexp">//</span>pili-live-rtmp.baozijian.cc<span class="regexp">/tron/</span>baozijian</div><div class="line"></div><div class="line"><span class="comment"># hls 播放地址：</span></div><div class="line">http:<span class="regexp">//</span>pili-live-hls.baozijian.cc<span class="regexp">/tron/</span>baozijian.m3u8</div><div class="line"></div><div class="line"><span class="comment"># flv 播放地址：</span></div><div class="line">http:<span class="regexp">//</span>pili-live-hdl.baozijian.cc<span class="regexp">/tron/</span>baozijian.flv</div></pre></td></tr></table></figure></p>
<p>对应的播放地址的格式：<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># rtmp 播放地址：</span></div><div class="line">rtmp://<span class="variable">&lt;rtmp-pull-domain&gt;</span>/<span class="variable">&lt;hub&gt;</span>/<span class="variable">&lt;tilte&gt;</span></div><div class="line"></div><div class="line"><span class="comment"># hls 播放地址：</span></div><div class="line">http://<span class="variable">&lt;hls-pull-domain&gt;</span>/<span class="variable">&lt;hub&gt;</span>/<span class="variable">&lt;tilte&gt;</span>.m3u8</div><div class="line"></div><div class="line"><span class="comment"># flv 播放地址：</span></div><div class="line">http://<span class="variable">&lt;flv-pull-domain&gt;</span>/<span class="variable">&lt;hub&gt;</span>/<span class="variable">&lt;title&gt;</span>.flv</div></pre></td></tr></table></figure></p>
<p><img src="https://upload.bz1.me/bloghub2.png" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;publish-domain : pili-publish.baozijian.cc&lt;/li&gt;
&lt;li&gt;rtmp-pull-domain : pili-live-rtmp.baozijian.cc&lt;/li&gt;
&lt;li&gt;hls-pull-domain : pili-live-hls.baozijian.cc&lt;/li&gt;
&lt;li&gt;flv-pull-domain : pili-live-hdl.baozijian.cc&lt;/li&gt;
&lt;li&gt;hub : tron&lt;/li&gt;
&lt;li&gt;title : baozijian&lt;/li&gt;
&lt;li&gt;key : baozijian&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;关于七牛的推流地址&quot;&gt;&lt;a href=&quot;#关于七牛的推流地址&quot; class=&quot;headerlink&quot; title=&quot;关于七牛的推流地址&quot;&gt;&lt;/a&gt;关于七牛的推流地址&lt;/h3&gt;&lt;p&gt;静态鉴权推流地址举例&lt;br&gt;&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;rtmp:&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;pili-publish.baozijian.cc&lt;span class=&quot;regexp&quot;&gt;/tron/&lt;/span&gt;baozijian?key=baozijian&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其他格式鉴权播放地址格式请参考：&lt;a href=&quot;https://www.bz1.me/%E4%B8%83%E7%89%9B%E7%9B%B4%E6%92%AD%E6%8E%A8%E6%B5%81%E9%89%B4%E6%9D%83.html&quot;&gt;七牛直播推流鉴权&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这个推流地址是有固定的组成格式，格式如下&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;rtmp://&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;publish-domain&lt;/span&gt;&amp;gt;&lt;/span&gt;/&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;hub&lt;/span&gt;&amp;gt;&lt;/span&gt;/&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;tilte&lt;/span&gt;&amp;gt;&lt;/span&gt;?key=&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;key&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="pili" scheme="https://www.bz1.me/tags/pili/"/>
    
  </entry>
  
  <entry>
    <title>七牛直播推流鉴权</title>
    <link href="https://www.bz1.me/%E4%B8%83%E7%89%9B%E7%9B%B4%E6%92%AD%E6%8E%A8%E6%B5%81%E9%89%B4%E6%9D%83.html"/>
    <id>https://www.bz1.me/七牛直播推流鉴权.html</id>
    <published>2016-12-12T07:41:13.000Z</published>
    <updated>2016-12-12T08:19:36.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="四种鉴权方式"><a href="#四种鉴权方式" class="headerlink" title="四种鉴权方式"></a>四种鉴权方式</h3><h4 id="1-static-静态校验（弱鉴权）"><a href="#1-static-静态校验（弱鉴权）" class="headerlink" title="1. static 静态校验（弱鉴权）"></a>1. static 静态校验（弱鉴权）</h4><figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rtmp://<span class="built_in">domain</span>/hub/<span class="built_in">title</span>?<span class="built_in">key</span>=&#123;可以更改的<span class="built_in">key</span>&#125;</div></pre></td></tr></table></figure>
<p>可以针对某个流来设置这类鉴权</p>
<h4 id="2-dynamic-动态校验（强鉴权）"><a href="#2-dynamic-动态校验（强鉴权）" class="headerlink" title="2. dynamic 动态校验（强鉴权）"></a>2. dynamic 动态校验（强鉴权）</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rtmp:<span class="regexp">//</span>domain<span class="regexp">/hub/</span>title?nonce=&#123;自定义某个时间戳&#125;&amp;token=&#123;publishToken&#125;</div></pre></td></tr></table></figure>
<p>这种鉴权，推流地址只能用一次，如果使用过了一次后，需要重新签算，可以针对某个流来设置</p>
<h4 id="3-expiry-时间戳鉴权"><a href="#3-expiry-时间戳鉴权" class="headerlink" title="3. expiry 时间戳鉴权"></a>3. expiry 时间戳鉴权</h4><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rtmp:<span class="regexp">//</span>domain<span class="regexp">/hub/</span>title?expire=&#123;自定义某个时间戳&#125;&amp;token=&#123;publishToken&#125;</div></pre></td></tr></table></figure>
<p>这种是在指定的时间戳内，可以推流。需要针对hub来设置此类鉴权，即hub内所有流都是expire鉴权。</p>
<h4 id="4-none-鉴权"><a href="#4-none-鉴权" class="headerlink" title="4.none 鉴权"></a>4.none 鉴权</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rtmp://<span class="tag">&lt;<span class="name">push_domain</span>&gt;</span>/<span class="tag">&lt;<span class="name">hub</span>&gt;</span>/<span class="tag">&lt;<span class="name">title</span>&gt;</span></div></pre></td></tr></table></figure>
<p>这种鉴权方式称为无校验鉴权，不限时间也无校验</p>
<p>⭐️注意：目前手机端推流 支持 static 和 dynamic 两种鉴权</p>
<h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ul>
<li>title: 流名，title 是 1-200 个字符，英文+数字组成，title 格式要求：^[a-zA-Z0-9_-]{4,100}$ ，title不能重复</li>
<li>publishKey：流密钥，1-200 个字符，英文+数字组成，publishKey 格式要求：^[a-zA-Z0-9_-]{4,100}$ ，可以重复</li>
<li>publishSecurity： 鉴权方式，如上四种，目前手机端推流，仅支持 static dynamic </li>
<li>PublishSecurity 鉴权方式：即鉴权方式。决定了推流地址的有效性和合法性。是应用(Hub)的属性,可以在控制台应用属性中进行修改。推流时，使用<code>rtmp://&lt;HubPublishDomain&gt;/&lt;StreamKey&gt;?&lt;鉴权方式中的publishKey或token&gt;</code>这样带有鉴权参数的地址，可获得推流能力。包括四种鉴权方式，static 静态推流地址/expiry限时推流地址/dynamic动态推流地址/none无鉴权方式。</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;四种鉴权方式&quot;&gt;&lt;a href=&quot;#四种鉴权方式&quot; class=&quot;headerlink&quot; title=&quot;四种鉴权方式&quot;&gt;&lt;/a&gt;四种鉴权方式&lt;/h3&gt;&lt;h4 id=&quot;1-static-静态校验（弱鉴权）&quot;&gt;&lt;a href=&quot;#1-static-静态校验（弱鉴权）&quot;
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="pili" scheme="https://www.bz1.me/tags/pili/"/>
    
  </entry>
  
  <entry>
    <title>七牛控制台直播空间详解</title>
    <link href="https://www.bz1.me/%E4%B8%83%E7%89%9B%E7%9B%B4%E6%92%AD%E7%A9%BA%E9%97%B4%E8%AF%A6%E8%A7%A3.html"/>
    <id>https://www.bz1.me/七牛直播空间详解.html</id>
    <published>2016-12-12T06:19:47.000Z</published>
    <updated>2016-12-15T02:53:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>直播空间截图和具体的设置方式细节在后面，首先先介绍一下七牛的推流地址</p>
<h3 id="关于七牛-streamJson-注释"><a href="#关于七牛-streamJson-注释" class="headerlink" title="关于七牛 streamJson 注释"></a>关于七牛 streamJson 注释</h3><p>七牛的 Android 和 ios 推流可以使用<code>streamJson</code>或者<code>七牛推流地址(url)</code>进行推流。</p>
<ul>
<li>服务端 V1 版本的 sdk 同时支持生成 url 和 streamJson</li>
<li>服务端 V2 版本的 sdk 不支持生成 streamJson<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line"><span class="string">"id"</span>: <span class="string">"z1.tron.baozijian"</span>, <span class="comment">//流 id</span></div><div class="line"><span class="string">"createdAt"</span>: <span class="string">"2016-12-12T06:08:51.365Z"</span>, <span class="comment">//创建时间</span></div><div class="line"><span class="string">"updatedAt"</span>: <span class="string">"2016-12-12T06:08:51.365Z"</span>, <span class="comment">//更新时间</span></div><div class="line"><span class="string">"title"</span>: <span class="string">"baozijian"</span>, <span class="comment">//流名称</span></div><div class="line"><span class="string">"hub"</span>: <span class="string">"tron"</span>, <span class="comment">//直播空间名</span></div><div class="line"><span class="string">"disabled"</span>: <span class="literal">true</span>, <span class="comment">//是否禁播流</span></div><div class="line"><span class="string">"publishKey"</span>: <span class="string">"baozijian"</span>, <span class="comment">//流秘钥</span></div><div class="line"><span class="string">"publishSecurity"</span>: <span class="string">"static"</span>, <span class="comment">//鉴权方式</span></div><div class="line"><span class="string">"hosts"</span>: &#123;</div><div class="line"><span class="string">"publish"</span>: &#123;</div><div class="line"><span class="string">"rtmp"</span>: <span class="string">"pili-publish.baozijian.cc"</span> <span class="comment">//rtmp 推流域名</span></div><div class="line">&#125;,</div><div class="line"><span class="string">"live"</span>: &#123;</div><div class="line"><span class="string">"hdl"</span>: <span class="string">"pili-live-hdl.baozijian.cc"</span>, <span class="comment">//flv 播放域名</span></div><div class="line"><span class="string">"hls"</span>: <span class="string">"pili-live-hls.baozijian.cc"</span>, <span class="comment">//hls 播放域名</span></div><div class="line"><span class="string">"http"</span>: <span class="string">"pili-live-hls.baozijian.cc"</span>, <span class="comment">//hls 播放域名</span></div><div class="line"><span class="string">"rtmp"</span>: <span class="string">"pili-live-rtmp.baozijian.cc"</span>, <span class="comment">//rtmp 播放域名</span></div><div class="line"><span class="string">"snapshot"</span>: <span class="string">"pili-live-snapshot.baozijian.cc"</span> <span class="comment">//实时截图域名</span></div><div class="line">&#125;,</div><div class="line"><span class="string">"playback"</span>: &#123;</div><div class="line"><span class="string">"hls"</span>: <span class="string">"10005x3.playback1.z1.pili.qiniucdn.com"</span>, <span class="comment">//playback 回看域名</span></div><div class="line"><span class="string">"http"</span>: <span class="string">"10005x3.playback1.z1.pili.qiniucdn.com"</span> <span class="comment">//playback 回看域名</span></div><div class="line">&#125;</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="七牛直播空间名-amp-域名管理"><a href="#七牛直播空间名-amp-域名管理" class="headerlink" title="七牛直播空间名&amp;域名管理"></a>七牛直播空间名&amp;域名管理</h3><p><img src="https://upload.bz1.me/bloghub.png" alt=""></p>
<ul>
<li>hub：tron</li>
<li>rtmp 推流域名：pili-publish.baozijian.cc</li>
<li>rtmp 播放域名：pili-live-rtmp.baozijian.cc</li>
<li>hls 播放域名：pili-live-hls.baozijian.cc</li>
<li>ts 切片域名：pili-media.baozijian.cc</li>
<li>flv 播放地址：pili-live-hdl.baozijian.cc</li>
<li>直播封面：pili-live-snapshot.baozijian.cc</li>
</ul>
<h3 id="七牛直播流管理-amp-推拉流地址-amp-禁播状态-amp-时间记录"><a href="#七牛直播流管理-amp-推拉流地址-amp-禁播状态-amp-时间记录" class="headerlink" title="七牛直播流管理&amp;推拉流地址&amp;禁播状态&amp;时间记录"></a>七牛直播流管理&amp;推拉流地址&amp;禁播状态&amp;时间记录</h3><p><img src="https://upload.bz1.me/bloghub2.png" alt=""></p>
<ul>
<li>hub：tron</li>
<li>rtmp 推流地址：rtmp://pili-publish.baozijian.cc/tron/baozijian?key=baozijian</li>
<li>rtmp 播放地址：rtmp://pili-live-rtmp.baozijian.cc/tron/baozijian</li>
<li>hls 播放地址：<a href="http://pili-live-hls.baozijian.cc/tron/baozijian.m3u8" target="_blank" rel="external">http://pili-live-hls.baozijian.cc/tron/baozijian.m3u8</a></li>
<li>flv 播放地址：<a href="http://pili-live-hdl.baozijian.cc/tron/baozijian.flv" target="_blank" rel="external">http://pili-live-hdl.baozijian.cc/tron/baozijian.flv</a></li>
<li>禁播状态：true</li>
<li>创建时间：2016-12-12 14:08:51</li>
<li>更新时间：2016-12-12 14:21:32</li>
</ul>
<h3 id="七牛直播空间设置"><a href="#七牛直播空间设置" class="headerlink" title="七牛直播空间设置"></a>七牛直播空间设置</h3><p><img src="https://upload.bz1.me/bloghub3.png" alt=""><br>七牛 portal.qiniu.com 控制台的直播空间设置中有如下属性可以设置：</p>
<ul>
<li>直播空间名称：tron『这个就是 hub 名』</li>
<li>存储空间名称：直播内容会切片落存储到该空间，直播转存，或者手动请求 snapshot() 都会保存在该空间</li>
<li>存储过期时间：直播内容会在直播后指定的时间内被自动删除，如果希望永久存储，需要调用 saveas() 接口进行转存</li>
<li>直播封面：开启后，可以根据<code>http://&lt;domain&gt;/&lt;hub&gt;/&lt;title&gt;.jpg</code>，进行访问，会实时刷新<ul>
<li>e.g. <a href="http://pili-live-snapshot.baozijian.cc/tron/baozijian.jpg" target="_blank" rel="external">http://pili-live-snapshot.baozijian.cc/tron/baozijian.jpg</a></li>
</ul>
</li>
<li>直播状态通知：当直播的状态有变化时，发送通知到指定的 URL 地址</li>
<li>直播中断超时：当一个流正在推的时候，status() 可以获取到流的状态为 connected,当pili持续 n 秒内没有收到推流端推送来的数据后，流会由 connected 变为 disconnected n 秒即为该 hub 的 timeout ，n 秒的值可以在此处设置。</li>
<li>直播鉴权：此处手动设置只有三种，实际有四种直播鉴权『static、dynamic、expire、none』<a href="https://note.bz1.me/七牛直播推流鉴权.html" target="_blank" rel="external">详细参考</a></li>
<li>删除直播空间：删除直播空间</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;直播空间截图和具体的设置方式细节在后面，首先先介绍一下七牛的推流地址&lt;/p&gt;
&lt;h3 id=&quot;关于七牛-streamJson-注释&quot;&gt;&lt;a href=&quot;#关于七牛-streamJson-注释&quot; class=&quot;headerlink&quot; title=&quot;关于七牛 streamJso
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="pili" scheme="https://www.bz1.me/tags/pili/"/>
    
  </entry>
  
  <entry>
    <title>关于七牛直播流状态</title>
    <link href="https://www.bz1.me/%E5%85%B3%E4%BA%8E%E4%B8%83%E7%89%9B%E7%9B%B4%E6%92%AD%E6%B5%81%E7%8A%B6%E6%80%81.html"/>
    <id>https://www.bz1.me/关于七牛直播流状态.html</id>
    <published>2016-12-09T15:12:38.000Z</published>
    <updated>2016-12-12T06:24:02.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="流状态共有两种："><a href="#流状态共有两种：" class="headerlink" title="流状态共有两种："></a>流状态共有两种：</h3><ul>
<li>connected</li>
<li>disconnected</li>
</ul>
<h3 id="回调："><a href="#回调：" class="headerlink" title="回调："></a>回调：</h3><ul>
<li>流状态发生改变都会回调</li>
<li>http raw post data 发送到回调服务器</li>
<li>在直播空间设置中可以填写回调服务器地址</li>
</ul>
<h3 id="关于推流状态判断："><a href="#关于推流状态判断：" class="headerlink" title="关于推流状态判断："></a>关于推流状态判断：</h3><ul>
<li>客户端可以发送 stopStreaming 给服务端，主动断开连接</li>
<li>如果因为网络或者其他原因，客户端未能发送断开请求<ul>
<li>服务端有一个 status() 方法，查询流状态</li>
<li>如果在超时时间内还未能收到断开请求，服务端就会主动将 status 置为 disconnected</li>
<li>超时时间在直播空间设置中可以选择，默认 15s</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;流状态共有两种：&quot;&gt;&lt;a href=&quot;#流状态共有两种：&quot; class=&quot;headerlink&quot; title=&quot;流状态共有两种：&quot;&gt;&lt;/a&gt;流状态共有两种：&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;connected&lt;/li&gt;
&lt;li&gt;disconnected&lt;/li&gt;
&lt;/u
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="pili" scheme="https://www.bz1.me/tags/pili/"/>
    
  </entry>
  
  <entry>
    <title>qshell 批量删除操作</title>
    <link href="https://www.bz1.me/%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E6%93%8D%E4%BD%9C.html"/>
    <id>https://www.bz1.me/批量删除操作.html</id>
    <published>2016-12-09T15:11:02.000Z</published>
    <updated>2016-12-09T15:11:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>qshell 删除指定时间前的文件<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="attribute">cat</span> <span class="number">1</span>.txt | awk <span class="string">'&#123;print <span class="variable">$4</span>&#125;'</span> | cut -c <span class="number">1</span>-<span class="number">10</span> &gt;<span class="number">2</span>.txt</div><div class="line">paste <span class="number">2</span>.txt <span class="number">1</span>.txt | awk <span class="string">'&#123;print <span class="variable">$1</span>" “<span class="variable">$2</span>&#125;'</span> | awk <span class="string">'<span class="variable">$1</span>&lt;1472371200&#123;print <span class="variable">$2</span>&#125;'</span></div></pre></td></tr></table></figure></p>
<p>qshell 删除指定时间内的文件<br><figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">cat myty-live.<span class="type">list</span>.txt | awk '&#123;print $<span class="number">4</span>&#125;' | cut -c <span class="number">1</span><span class="number">-10</span> &gt;time1.txt</div><div class="line">paste time1.txt myty-live.<span class="type">list</span>.txt | awk '$<span class="number">1</span>&gt;=<span class="number">1473650315</span> &amp;&amp; $<span class="number">1</span>&lt;=<span class="number">1473650495</span>&#123;print $<span class="number">3</span>” “$<span class="number">2</span>&#125;’</div></pre></td></tr></table></figure></p>
<p>qshell 批量删除操作</p>
<ul>
<li>qshell 下载地址&amp;文档(<a href="http://developer.qiniu.com/code/v6/tool/qshell.html" target="_blank" rel="external">http://developer.qiniu.com/code/v6/tool/qshell.html</a>)</li>
<li>qshell account 登陆</li>
<li>qshell listbucket 列举出空间所有文件</li>
<li>根据自己的需求过滤出文件名(如果全部删除，则不需要过滤)</li>
<li>qshell batchdelete 批量删除</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;qshell 删除指定时间前的文件&lt;br&gt;&lt;figure class=&quot;highlight nginx&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div
    
    </summary>
    
    
      <category term="qiniu;shell" scheme="https://www.bz1.me/tags/qiniu-shell/"/>
    
  </entry>
  
  <entry>
    <title>[bash shell]采用表单/分片上传文件至七牛云</title>
    <link href="https://www.bz1.me/shell-%E9%87%87%E7%94%A8%E8%A1%A8%E5%8D%95-%E5%88%86%E7%89%87%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E8%87%B3%E4%B8%83%E7%89%9B%E4%BA%91.html"/>
    <id>https://www.bz1.me/shell-采用表单-分片上传文件至七牛云.html</id>
    <published>2016-12-09T15:09:46.000Z</published>
    <updated>2016-12-14T06:00:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>注意1：需要将 qshell 加入环境变量<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv qshell <span class="regexp">/usr/</span>local<span class="regexp">/bin/</span>qshell</div></pre></td></tr></table></figure></p>
<p><a href="http://developer.qiniu.com/code/v6/tool/qshell.html" target="_blank" rel="external">http://developer.qiniu.com/code/v6/tool/qshell.html</a></p>
<p>注意2：此脚本需要注册七牛云账号，获取 ak 和 sk，以及创建 bucket 用于存储<br>快速入门：<br><a href="http://developer.qiniu.com/article/kodo/kodo-first/quickstart.html" target="_blank" rel="external">http://developer.qiniu.com/article/kodo/kodo-first/quickstart.html</a></p>
<h3 id="需要配置的参数"><a href="#需要配置的参数" class="headerlink" title="需要配置的参数"></a>需要配置的参数</h3><ol>
<li>ak sk</li>
<li>bucket</li>
<li>domain</li>
</ol>
<h3 id="shell-脚本如下："><a href="#shell-脚本如下：" class="headerlink" title="shell 脚本如下："></a>shell 脚本如下：</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line">ii=<span class="variable">$1</span></div><div class="line">qshell account &lt;ak&gt; &lt;sk&gt;</div><div class="line">jj=$(ls <span class="_">-l</span> | grep <span class="variable">$ii</span> | awk <span class="string">'&#123;print $5&#125;'</span>)</div><div class="line"></div><div class="line"><span class="keyword">if</span> [[ <span class="variable">$jj</span> <span class="_">-lt</span> <span class="string">'100000000'</span> ]];</div><div class="line">	<span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">""</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"文件大小：<span class="variable">$bb</span>"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"此文件小于100M，将采用表单上传"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">""</span></div><div class="line">	qshell fput &lt;bucket&gt; <span class="variable">$ii</span> <span class="variable">$1</span> | tee <span class="_">-a</span> <span class="built_in">test</span>1111</div><div class="line"></div><div class="line">	xx=$(cat <span class="built_in">test</span>1111 | grep <span class="string">"Put"</span> | awk -F <span class="string">')'</span> <span class="string">'&#123;print $2&#125;'</span>)</div><div class="line">	rm <span class="built_in">test</span>1111</div><div class="line">	<span class="keyword">if</span> [[ <span class="variable">$xx</span> = <span class="string">' success!'</span> ]];</div><div class="line">		<span class="keyword">then</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">""</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">"访问链接："</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">"http://&lt;domain&gt;/<span class="variable">$ii</span>"</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">""</span></div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">"Fail, please try again!"</span></div><div class="line">	<span class="keyword">fi</span></div><div class="line"></div><div class="line"><span class="keyword">elif</span> [[ <span class="variable">$jj</span> -ge <span class="string">'100000000'</span> ]];</div><div class="line">	<span class="keyword">then</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">""</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"文件大小：<span class="variable">$bb</span>"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"此文件大于100M，将采用分片上传"</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">""</span></div><div class="line">	qshell rput &lt;bucket&gt; <span class="variable">$ii</span> <span class="variable">$1</span> | tee <span class="_">-a</span> <span class="built_in">test</span>1111</div><div class="line"></div><div class="line">	xx=$(cat <span class="built_in">test</span>1111 | grep <span class="string">"Put"</span> | awk -F <span class="string">')'</span> <span class="string">'&#123;print $2&#125;'</span>)</div><div class="line">	rm <span class="built_in">test</span>1111</div><div class="line">	<span class="keyword">if</span> [[ <span class="variable">$xx</span> = <span class="string">' success!'</span> ]];</div><div class="line">		<span class="keyword">then</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">""</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">"访问链接："</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">"http://&lt;domain&gt;/<span class="variable">$ii</span>"</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">""</span></div><div class="line">	<span class="keyword">else</span></div><div class="line">		<span class="built_in">echo</span> <span class="string">"Fail, please try again!"</span></div><div class="line">	<span class="keyword">fi</span></div><div class="line"><span class="keyword">else</span></div><div class="line">	<span class="built_in">echo</span> <span class="string">"File error~ 卧槽日了狗"</span></div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<h3 id="测试截图："><a href="#测试截图：" class="headerlink" title="测试截图："></a>测试截图：</h3><p><img src="https://upload.bz1.me/qsuptest.png" alt="qsup1"><br><img src="https://upload.bz1.me/qsuptest2.png" alt="qsup2"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;注意1：需要将 qshell 加入环境变量&lt;br&gt;&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;
    
    </summary>
    
    
      <category term="qiniu" scheme="https://www.bz1.me/tags/qiniu/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://www.bz1.me/hello-world.html"/>
    <id>https://www.bz1.me/hello-world.html</id>
    <published>2016-12-08T14:22:18.000Z</published>
    <updated>2016-12-08T14:22:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>关于 m3u8</title>
    <link href="https://www.bz1.me/m3u8.html"/>
    <id>https://www.bz1.me/m3u8.html</id>
    <published>2016-12-08T14:21:02.000Z</published>
    <updated>2016-12-14T05:58:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于-m3u8"><a href="#关于-m3u8" class="headerlink" title="关于 m3u8"></a>关于 m3u8</h2><p>M3U8是Unicode版本的M3U，用UTF-8编码。”M3U”和”M3U8”文件都是苹果公司使用的HTTP Live Streaming格式的基础，这种格式可以在iPhone和Macbook等设备播放。<br>m3u8 其实是一个文本文件，是一个 <code>playlist</code>，用来索引 <code>ts 文件</code>，真正的流媒体文件其实是<code>ts 文件</code><br>⭐️参考 wiki (<a href="https://zh.wikipedia.org/wiki/M3U#M3U8" target="_blank" rel="external">https://zh.wikipedia.org/wiki/M3U#M3U8</a>)</p>
<h3 id="举个例子："><a href="#举个例子：" class="headerlink" title="举个例子："></a>举个例子：</h3><p><code>http://sc.sc.bz1.me/123123123.m3u8</code></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#EXTM3U</span></div><div class="line"><span class="selector-id">#EXT-X-VERSION</span>:<span class="number">3</span></div><div class="line"><span class="selector-id">#EXT-X-ALLOW-CACHE</span>:NO</div><div class="line"><span class="selector-id">#EXT-X-TARGETDURATION</span>:<span class="number">10</span></div><div class="line"><span class="selector-id">#EXT-X-MEDIA-SEQUENCE</span>:<span class="number">1</span></div><div class="line"><span class="selector-id">#EXT-X-DISCONTINUITY</span></div><div class="line"><span class="selector-id">#EXTINF</span>:<span class="number">5.133</span>,</div><div class="line">/fragments/z1<span class="selector-class">.Newhub</span>.<span class="number">5784</span>a9645e77b0372002e792/<span class="number">1468570587846</span>-<span class="number">1468570592979</span><span class="selector-class">.ts</span></div><div class="line"><span class="selector-id">#EXTINF</span>:<span class="number">5.333</span>,</div><div class="line">/fragments/z1<span class="selector-class">.Newhub</span>.<span class="number">5784</span>a9645e77b0372002e792/<span class="number">1468570592238</span>-<span class="number">1468570597571</span><span class="selector-class">.ts</span></div><div class="line"><span class="selector-id">#EXTINF</span>:<span class="number">5.334</span>,</div><div class="line">/fragments/z1<span class="selector-class">.Newhub</span>.<span class="number">5784</span>a9645e77b0372002e792/<span class="number">1468570597278</span>-<span class="number">1468570602612</span><span class="selector-class">.ts</span></div><div class="line">&lt;此处省略部分&gt;</div><div class="line">#EXT-X-ENDLIST</div></pre></td></tr></table></figure>
<p>七牛的<code>avthumb 切片</code>或者直播的<code>转码</code>服务，生成的 m3u8 文件格式大体如上，有的 m3u8 文件可能是在文本中是 <code>http://domain/key.ts</code> 的格式。</p>
<p>标准的 m3u8 文件遵循了 apple 公司的官方标准，可以用官方工具(     <code>mediastreamvalidator</code> )检测看下，此处不赘述。<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$ </span>mediastreamvalidator <span class="symbol">http:</span>/<span class="regexp">/sc.sc.bz1.me/</span><span class="number">123123123</span>.m3u8</div></pre></td></tr></table></figure></p>
<p>有一些可能就不是很标准，本文脚本可以拆分出每个 ts 的物理时间戳，走北京时间，并且计算出每个 ts 的时长和视频总时长，简单实用。<br>实用脚本前需要先在本地下载七牛的 <code>qshell 工具</code>(<a href="http://developer.qiniu.com/code/v6/tool/qshell.html)，并且加入环境变量(全局可以运行" target="_blank" rel="external">http://developer.qiniu.com/code/v6/tool/qshell.html)，并且加入环境变量(全局可以运行</a> qshell)</p>
<h3 id="脚本如下："><a href="#脚本如下：" class="headerlink" title="脚本如下："></a>脚本如下：</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">curl <span class="variable">$1</span> | grep ts | awk -F '/z1.' '&#123;<span class="keyword">print</span> <span class="variable">$2&#125;</span>' | awk -F '/' '&#123;<span class="keyword">print</span> <span class="variable">$2&#125;</span>' | awk -F <span class="string">"."</span> '&#123;<span class="keyword">print</span> <span class="variable">$1&#125;</span>' | awk -F '-' '&#123;<span class="string">"qshell tms2d "</span><span class="variable">$1</span>|getline a; <span class="keyword">close</span>(<span class="string">"qshell tms2d "</span><span class="variable">$1</span>);<span class="string">"qshell tms2d "</span><span class="variable">$2</span>|getline b;<span class="keyword">close</span>(<span class="string">"qshell tms2d "</span><span class="variable">$2</span>);<span class="keyword">print</span> a,<span class="string">" "</span>,b;&#125;' &gt;test11</div><div class="line"></div><div class="line">curl <span class="variable">$1</span> | grep ts | awk -F '/z1.' '&#123;<span class="keyword">print</span> <span class="variable">$2&#125;</span>' | awk -F '/' '&#123;<span class="keyword">print</span> <span class="variable">$2&#125;</span>' | awk -F <span class="string">"."</span> '&#123;<span class="keyword">print</span> <span class="variable">$1&#125;</span>' | awk -F <span class="string">"-"</span> '&#123;<span class="keyword">print</span> (<span class="variable">$2</span> - <span class="variable">$1</span>)/1000 <span class="string">" s"</span>&#125;' &gt;test22</div><div class="line"></div><div class="line"><span class="keyword">cat</span> test22 | awk '&#123;<span class="keyword">sum</span>+=<span class="variable">$1&#125;</span> END &#123;<span class="keyword">print</span> <span class="string">"Total = "</span>, <span class="keyword">sum</span>&#125;' &gt;test33</div><div class="line"></div><div class="line">paste test11 test22</div><div class="line">echo <span class="string">""</span></div><div class="line">echo <span class="string">"m3u8中的ts文件总时长(分钟为单位)"</span></div><div class="line"><span class="keyword">cat</span> test33 | awk '&#123;<span class="keyword">print</span> <span class="variable">$3</span>/60 <span class="string">" min"</span>&#125;'</div><div class="line"></div><div class="line"><span class="keyword">rm</span> test11</div><div class="line"><span class="keyword">rm</span> test22</div><div class="line"><span class="keyword">rm</span> test33</div></pre></td></tr></table></figure>
<h3 id="测试输出如下："><a href="#测试输出如下：" class="headerlink" title="测试输出如下："></a>测试输出如下：</h3><p><img src="https://upload.bz1.me/tssssh.png" alt="tsss.sh"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于-m3u8&quot;&gt;&lt;a href=&quot;#关于-m3u8&quot; class=&quot;headerlink&quot; title=&quot;关于 m3u8&quot;&gt;&lt;/a&gt;关于 m3u8&lt;/h2&gt;&lt;p&gt;M3U8是Unicode版本的M3U，用UTF-8编码。”M3U”和”M3U8”文件都是苹果公司使用
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="qiniu" scheme="https://www.bz1.me/tags/qiniu/"/>
    
  </entry>
  
  <entry>
    <title>PortSentry 保护云主机禁止被恶意扫描</title>
    <link href="https://www.bz1.me/portsentry.html"/>
    <id>https://www.bz1.me/portsentry.html</id>
    <published>2016-09-27T14:21:02.000Z</published>
    <updated>2016-12-14T05:59:59.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>注：本文采用的操作系统为 ubuntu14.04</p>
</blockquote>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>PortSentry is part of SentryTools. This daemon will watch unused ports for activity and depending on how it is configured take action upon excessive access to watched ports.<br><a href="https://wiki.gentoo.org/wiki/PortSentry" target="_blank" rel="external">wiki</a></p>
<h2 id="portsentry-采取的措施："><a href="#portsentry-采取的措施：" class="headerlink" title="portsentry 采取的措施："></a>portsentry 采取的措施：</h2><ul>
<li>将流量引到一个虚假的路由，一个不存在的主机</li>
<li>自动对服务器端口扫描的主机加到 /etc/hosts.deny 文件中去</li>
<li>利用 Netfiliter 机制，用包过滤的机制，例如 iptables 和 ipchain 等，把非法的数据包（来自对主机进行端口扫描的主机）都过滤掉；</li>
<li>通过 syslog() 函数给出一个日志消息，或者一段警告信息</li>
</ul>
<h2 id="portsentry-安装"><a href="#portsentry-安装" class="headerlink" title="portsentry 安装"></a>portsentry 安装</h2><p>下载地址</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http:<span class="regexp">//</span>sourceforge.net<span class="regexp">/projects/</span>sentrytools<span class="regexp">/</span></div></pre></td></tr></table></figure>
<p>解压</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="selector-tag">tar</span> <span class="selector-tag">zxvf</span> <span class="selector-tag">portsentry-1</span><span class="selector-class">.2</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></div></pre></td></tr></table></figure>
<p>不能直接编译，这里有点特殊，解压完的包中，<code>portsentry.c</code>这个文件中在<code>1584</code>行有一处错误，将其改成一行</p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">printf (<span class="string">"Copyright 1997-2003 Craig H. Rowland &lt;craigrowland at users dot sourceforget dot net&gt;\n"</span>)<span class="comment">;</span></div></pre></td></tr></table></figure>
<p><img src="https://upload.bz1.me/portsentry1588c.png?imageView/2/h/300" alt="portsentry"></p>
<p>然后进行编译</p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">make</span> linux&amp; <span class="built_in">make</span> install</div></pre></td></tr></table></figure>
<p>成功安装，安装的路劲为<code>/usr/local/psionic/portsentry</code><br><a id="more"></a></p>
<h2 id="portsentry-配置"><a href="#portsentry-配置" class="headerlink" title="portsentry 配置"></a>portsentry 配置</h2><h3 id="修改配置文件-portsentry-conf"><a href="#修改配置文件-portsentry-conf" class="headerlink" title="修改配置文件 portsentry.conf"></a>修改配置文件 <code>portsentry.conf</code></h3><p>通过 <code>portsentry</code> 进行入侵检测，如下段落为<strong>需要监视的端口清单</strong>，和<strong>相应的阻止措施</strong>。启动之后，后开进程开启监控这些端口，发现有人扫描，就启动相应的对策进行阻拦。</p>
<p>NO.1 Port Configurations<br>这一端列出了默认的监视的端口，可以通过去掉<code>#</code>号来执行默认的配置，可以自行修改</p>
<figure class="highlight dns"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"># Port Configurations </div><div class="line"></div><div class="line"># Un-comment these if you are really anal:</div><div class="line">#TCP_PORTS="<span class="number">1,7,9,11</span>,<span class="number">15,70,79,80</span>,<span class="number">109,110,111,119</span>,<span class="number">138,139,143</span>,<span class="number">512,513</span>,<span class="number">514,515</span>,<span class="number">540,635</span>,<span class="number">1080,1524</span>,<span class="number">2000,2001</span>,<span class="number">4000,4001</span>,<span class="number">5742,6000</span>,<span class="number">6001,6667</span>,<span class="number">12345,12346</span>,<span class="number">20034,27665</span>,<span class="number">30303,32771</span>,<span class="number">32772,32773</span>,<span class="number">32774,31337</span>,<span class="number">40421,40425</span>,<span class="number">49724,54320</span>"</div><div class="line">#UDP_PORTS="<span class="number">1,7,9,66</span>,<span class="number">67,68,69,111</span>,<span class="number">137,138,161,162</span>,<span class="number">474,513</span>,<span class="number">517,518</span>,<span class="number">635,640</span>,<span class="number">641,666</span>,<span class="number">700,2049</span>,<span class="number">31335,27444</span>,<span class="number">34555,32770</span>,<span class="number">32771,32772</span>,<span class="number">32773,32774</span>,<span class="number">31337,54321</span>"</div><div class="line">#</div><div class="line"># Use these if you just want to be aware:</div><div class="line">TCP_PORTS="<span class="number">1,11,15,79</span>,<span class="number">111,119,143</span>,<span class="number">540,635</span>,<span class="number">1080,1524</span>,<span class="number">2000,5742</span>,<span class="number">6667,12345</span>,<span class="number">12346,20034</span>,<span class="number">27665,31337</span>,<span class="number">32771,32772</span>,<span class="number">32773,32774</span>,<span class="number">40421,49724</span>,<span class="number">54320,51010</span>"</div><div class="line">UDP_PORTS="<span class="number">1,7,9,69</span>,<span class="number">161,162,513</span>,<span class="number">635,640</span>,<span class="number">641,700</span>,<span class="number">37444,34555</span>,<span class="number">31335,32770</span>,<span class="number">32771,32772</span>,<span class="number">32773,32774</span>,<span class="number">31337,54321</span>"</div><div class="line">#</div><div class="line"># Use these for just bare-bones</div><div class="line">#TCP_PORTS="<span class="number">1,11,15,110</span>,<span class="number">111,143,540</span>,<span class="number">635,1080</span>,<span class="number">1524,2000</span>,<span class="number">12345,12346</span>,<span class="number">20034,32771</span>,<span class="number">32772,32773</span>,<span class="number">32774,49724</span>,<span class="number">54320</span>"</div><div class="line">#UDP_PORTS="<span class="number">1,7,9,69</span>,<span class="number">161,162,513</span>,<span class="number">640,700</span>,<span class="number">32770,32771</span>,<span class="number">32772,32773</span>,<span class="number">32774,31337</span>,<span class="number">54321</span>"</div></pre></td></tr></table></figure>
<p>NO.2 Advanced Stealth Scan Detection Options</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Advanced Stealth Scan Detection Options</span></div><div class="line"><span class="attr">ADVANCED_PORTS_TCP</span>=<span class="string">"1024"</span></div><div class="line"><span class="attr">ADVANCED_PORTS_UDP</span>=<span class="string">"1024"</span></div><div class="line"></div><div class="line"><span class="comment"># Default TCP ident and NetBIOS service</span></div><div class="line"><span class="attr">ADVANCED_EXCLUDE_TCP</span>=<span class="string">"113,139"</span></div><div class="line"><span class="comment"># Default UDP route (RIP), NetBIOS, bootp broadcasts.</span></div><div class="line"><span class="attr">ADVANCED_EXCLUDE_UDP</span>=<span class="string">"520,138,137,67"</span></div></pre></td></tr></table></figure>
<p>NO.3 Configuration Files；portsentry.conf 相关的配置文件</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># Configuration Files</span></div><div class="line"><span class="meta"># Hosts to ignore </span></div><div class="line"><span class="meta">#（ 此文件记录允许合法扫描服务的主机地址 ）</span></div><div class="line">IGNORE_FILE=<span class="string">"/usr/local/psionic/portsentry/portsentry.ignore"</span></div><div class="line"><span class="meta"># Hosts that have been denied (running history) </span></div><div class="line"><span class="meta">#（ 此文件中保留入侵主机的 IP 地址 ）</span></div><div class="line">HISTORY_FILE=<span class="string">"/usr/local/psionic/portsentry/portsentry.history"</span></div><div class="line"><span class="meta"># Hosts that have been denied this session only (temporary until next restart)</span></div><div class="line"><span class="meta"># （ 此文件中是已经被阻止连接的主机 IP 记录 ）</span></div><div class="line">BLOCKED_FILE=<span class="string">"/usr/local/psionic/portsentry/portsentry.blocked"</span></div></pre></td></tr></table></figure>
<p>NO.4 Dropping Routes<br>丢弃规则，也就是路由重定向，设置一条虚拟的路由记录，把数据包重定向到一个不存在的主机<br>根据不同的操作系统，选择不同的命令</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># Dropping Routes</span></div><div class="line"><span class="meta"># Generic</span></div><div class="line"><span class="meta">#KILL_ROUTE="/sbin/route add $TARGET$ 333.444.555.666"</span></div><div class="line"></div><div class="line"><span class="meta"># Generic Linux</span></div><div class="line">KILL_ROUTE=<span class="string">"/sbin/route add -host $TARGET$ gw 333.444.555.666"</span></div><div class="line"></div><div class="line"><span class="meta"># Newer versions of Linux support the reject flag now. This</span></div><div class="line"><span class="meta"># is cleaner than the above option.</span></div><div class="line"><span class="meta">#KILL_ROUTE="/sbin/route add -host $TARGET$ reject"</span></div><div class="line"></div><div class="line"><span class="meta"># Generic BSD (BSDI, OpenBSD, NetBSD, FreeBSD)</span></div><div class="line"><span class="meta">#KILL_ROUTE="/sbin/route add $TARGET$ 333.444.555.666"</span></div><div class="line"></div><div class="line"><span class="meta"># Generic Sun</span></div><div class="line"><span class="meta">#KILL_ROUTE="/usr/sbin/route add $TARGET$ 333.444.555.666 1"</span></div><div class="line"></div><div class="line"><span class="meta"># NEXTSTEP</span></div><div class="line"><span class="meta">#KILL_ROUTE="/usr/etc/route add $TARGET$ 127.0.0.1 1"</span></div><div class="line"></div><div class="line"><span class="meta"># FreeBSD</span></div><div class="line"><span class="meta">#KILL_ROUTE="route add -net $TARGET$ -netmask 255.255.255.255 127.0.0.1 -blackhole"</span></div><div class="line"></div><div class="line"><span class="meta"># Digital UNIX 4.0D (OSF/1 / Compaq Tru64 UNIX)</span></div><div class="line"><span class="meta">#KILL_ROUTE="/sbin/route add -host -blackhole $TARGET$ 127.0.0.1"</span></div><div class="line"></div><div class="line"><span class="meta"># Generic HP-UX</span></div><div class="line"><span class="meta">#KILL_ROUTE="/usr/sbin/route add net $TARGET$ netmask 255.255.255.0 127.0.0.1"</span></div></pre></td></tr></table></figure>
<p>NO.5 根据配置文件记录下的 IP，使用 iptables 阻塞掉，切断与其连接</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">##</span></div><div class="line"><span class="meta"># Using a packet filter is the PREFERRED. The below lines</span></div><div class="line"><span class="meta"># work well on many OS's. Remember, you can only uncomment *one*</span></div><div class="line"><span class="meta"># KILL_ROUTE option.</span></div><div class="line"></div><div class="line"><span class="meta"># ipfwadm support for Linux</span></div><div class="line"><span class="meta">#KILL_ROUTE="/sbin/ipfwadm -I -i deny -S $TARGET$ -o"</span></div><div class="line"><span class="meta">#</span></div><div class="line"><span class="meta"># ipfwadm support for Linux (no logging of denied packets)</span></div><div class="line"><span class="meta">#KILL_ROUTE="/sbin/ipfwadm -I -i deny -S $TARGET$"</span></div><div class="line"><span class="meta">#</span></div><div class="line"><span class="meta"># ipchain support for Linux</span></div><div class="line"><span class="meta">#KILL_ROUTE="/sbin/ipchains -I input -s $TARGET$ -j DENY -l"</span></div><div class="line"><span class="meta">#</span></div><div class="line"><span class="meta"># ipchain support for Linux (no logging of denied packets)</span></div><div class="line"><span class="meta">#KILL_ROUTE="/sbin/ipchains -I input -s $TARGET$ -j DENY"</span></div><div class="line"><span class="meta">#</span></div><div class="line"><span class="meta"># iptables support for Linux</span></div><div class="line"><span class="meta">#KILL_ROUTE="/usr/local/bin/iptables -I INPUT -s $TARGET$ -j DROP"</span></div><div class="line"><span class="meta">#</span></div><div class="line"><span class="meta"># For those of you running FreeBSD (and compatible) you can</span></div><div class="line"><span class="meta"># use their built in firewalling as well.</span></div><div class="line"><span class="meta">#</span></div><div class="line"><span class="meta">#KILL_ROUTE="/sbin/ipfw add 1 deny all from $TARGET$:255.255.255.255 to any"</span></div><div class="line"><span class="meta">#</span></div><div class="line"><span class="meta"># For those running ipfilt (OpenBSD, etc.)</span></div><div class="line"><span class="meta"># NOTE THAT YOU NEED TO CHANGE external_interface TO A VALID INTERFACE!!</span></div><div class="line"><span class="meta">#</span></div><div class="line"><span class="meta">#KILL_ROUTE="/bin/echo 'block in log on external_interface from $TARGET$/32 to any' | /sbin/ipf -f -"</span></div></pre></td></tr></table></figure>
<p>NO.6 也可以把攻击者的 IP 记录到 <code>/etc/hosts.deny</code> 中，利用 <code>TCP_Wrappers</code> 机制防止被攻击</p>
<blockquote>
<p>TCP_Wrappers ：Transmission Control Protocol (TCP) Wrappers 为由 inetd 生成的服务提供了增强的安全性。TCP Wrappers 是一种对使用 /etc/inetd.sec 的替换方法。TCP Wrappers 提供防止主机名和主机地址欺骗的保护。欺骗是一种伪装成有效用户或主机以获得对系统进行未经授权的访问的方法。</p>
</blockquote>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># TCP Wrappers</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="attr">KILL_HOSTS_DENY</span>=<span class="string">"ALL: $TARGET$"</span></div></pre></td></tr></table></figure>
<p>NO.7 定制警告信息，警告攻击者</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Port Banner Section</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Enter text in here you want displayed to a person tripping the PortSentry.</span></div><div class="line"><span class="comment"># I *don't* recommend taunting the person as this will aggravate them.</span></div><div class="line"><span class="comment"># Leave this commented out to disable the feature</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="comment"># Stealth scan detection modes don't use this feature</span></div><div class="line"><span class="comment">#</span></div><div class="line"><span class="attr">PORT_BANNER</span>=<span class="string">"** UNAUTHORIZED ACCESS PROHIBITED *** YOUR CONNECTION ATTEMPT HAS BEEN LOGGED. GO AWAY."</span></div></pre></td></tr></table></figure>
<h3 id="修改-portsentry-ignore-的配置文件"><a href="#修改-portsentry-ignore-的配置文件" class="headerlink" title="修改 portsentry.ignore 的配置文件"></a>修改 <code>portsentry.ignore</code> 的配置文件</h3><p>文件 <code>/usr/local/psionic/portsentry/portsentry.ignore</code> 配置上本地的 IP 和 常建立连接的主机，允许合法扫描</p>
<p>配置好之后最好修改一下 <code>/usr/local/psionic/portsentry/portsentry.conf</code> 和 <code>/usr/local/psionic/portsentry/portsentry.ignore</code> 的权限</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">chmod <span class="number">600</span> <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/psionic/</span>portsentry/portsentry.conf</div><div class="line">chmod <span class="number">600</span> <span class="meta-keyword">/usr/</span>local<span class="meta-keyword">/psionic/</span>portsentry/portsentry.ignore</div></pre></td></tr></table></figure>
<h3 id="开启监测模式"><a href="#开启监测模式" class="headerlink" title="开启监测模式"></a>开启监测模式</h3><p>PortSentry的启动检测模式。对应TCP和UDF两种协议方式，PortSentry分别有三种启动模式，即基本、秘密和高级秘密扫描检测模式，合计6个模式。</p>
<ul>
<li>portsentry-tcp，TCP的基本端口绑定模式；</li>
<li>portsentry-udp，UDP的基本端口绑定模式；</li>
<li>portsentry-stcp，TCP的秘密扫描检测模式；</li>
<li>portsentry-sudp，UDP的秘密扫描检测模式；</li>
<li>portsentry-atcp，TCP的高级秘密扫描检测模式；</li>
<li>portsentry-audp，UDP的高级秘密扫描检测模式。</li>
</ul>
<p><strong>一般情况下，建议使用秘密扫描检测模式或高级秘密扫描检测模式。</strong><br>使用高级秘密扫描检测模式（Advanced Stealth Scan Detection Mode），PortSentry会自动检查服务器上正在运行的端口， 然后把这些端口从配置文件中移去， 只监控其它的端口。这样会加快对端口扫描的反应速度，并且只占用很少的CPU时间，这种模式非常智能</p>
<p>启动命令：</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="regexp">/usr/</span>local<span class="regexp">/psionic/</span>portsentry<span class="regexp">/portsentry -atcp</span></div></pre></td></tr></table></figure>
<p>建议将这条命令写入 <code>/etc/rc.local</code> 中，这样开机就自启动了</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>我的<code>云主机 A</code> <code>IP</code> 假设为 <code>XXX.XXX.XXX.XXX</code>，云主机 A 上配置并开启了 <code>portsentry</code><br>开启一台<code>云主机 B</code>，<code>IP</code> 地址为 <code>115.231.183.78</code><br><img src="https://upload.bz1.me/fortestipgs.png?imageView/2/h/50" alt="ip"></p>
<p>使用 <code>云主机 B</code> 扫描 <code>云主机 A</code> 的端口<br><img src="https://upload.bz1.me/nmapsaomiao.png?imageView/2/h/300" alt="nmap"></p>
<p><code>云主机 A</code> 监测到了恶意扫描，会将其加入 <code>/etc/hosts.deny</code>,并且在 <code>/usr/local/psionic/portsentry/portsentry.blocked.atcp</code> 会记录 block 掉了<br><img src="https://upload.bz1.me/denydioale.png" alt=""><br><img src="https://upload.bz1.me/blockded.png?imageView/2/h/300" alt="blockd"></p>
<p>简单处理一下，发现还有不是自己扫的，无聊的人也是多- -！</p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;注：本文采用的操作系统为 ubuntu14.04&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;PortSentry is part of SentryTools. This daemon will watch unused ports for activity and depending on how it is configured take action upon excessive access to watched ports.&lt;br&gt;&lt;a href=&quot;https://wiki.gentoo.org/wiki/PortSentry&quot;&gt;wiki&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;portsentry-采取的措施：&quot;&gt;&lt;a href=&quot;#portsentry-采取的措施：&quot; class=&quot;headerlink&quot; title=&quot;portsentry 采取的措施：&quot;&gt;&lt;/a&gt;portsentry 采取的措施：&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;将流量引到一个虚假的路由，一个不存在的主机&lt;/li&gt;
&lt;li&gt;自动对服务器端口扫描的主机加到 /etc/hosts.deny 文件中去&lt;/li&gt;
&lt;li&gt;利用 Netfiliter 机制，用包过滤的机制，例如 iptables 和 ipchain 等，把非法的数据包（来自对主机进行端口扫描的主机）都过滤掉；&lt;/li&gt;
&lt;li&gt;通过 syslog() 函数给出一个日志消息，或者一段警告信息&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;portsentry-安装&quot;&gt;&lt;a href=&quot;#portsentry-安装&quot; class=&quot;headerlink&quot; title=&quot;portsentry 安装&quot;&gt;&lt;/a&gt;portsentry 安装&lt;/h2&gt;&lt;p&gt;下载地址&lt;/p&gt;
&lt;figure class=&quot;highlight awk&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;http:&lt;span class=&quot;regexp&quot;&gt;//&lt;/span&gt;sourceforge.net&lt;span class=&quot;regexp&quot;&gt;/projects/&lt;/span&gt;sentrytools&lt;span class=&quot;regexp&quot;&gt;/&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;解压&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;zxvf&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;portsentry-1&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.2&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.tar&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.gz&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不能直接编译，这里有点特殊，解压完的包中，&lt;code&gt;portsentry.c&lt;/code&gt;这个文件中在&lt;code&gt;1584&lt;/code&gt;行有一处错误，将其改成一行&lt;/p&gt;
&lt;figure class=&quot;highlight abnf&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;printf (&lt;span class=&quot;string&quot;&gt;&quot;Copyright 1997-2003 Craig H. Rowland &amp;lt;craigrowland at users dot sourceforget dot net&amp;gt;\n&quot;&lt;/span&gt;)&lt;span class=&quot;comment&quot;&gt;;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;https://upload.bz1.me/portsentry1588c.png?imageView/2/h/300&quot; alt=&quot;portsentry&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后进行编译&lt;/p&gt;
&lt;figure class=&quot;highlight gauss&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt; linux&amp;amp; &lt;span class=&quot;built_in&quot;&gt;make&lt;/span&gt; install&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;成功安装，安装的路劲为&lt;code&gt;/usr/local/psionic/portsentry&lt;/code&gt;&lt;br&gt;
    
    </summary>
    
      <category term="linux" scheme="https://www.bz1.me/categories/linux/"/>
    
    
      <category term="安全" scheme="https://www.bz1.me/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>实现 socks5 转换为 http 代理科学上网 (shadowsocks + polipo + pac)</title>
    <link href="https://www.bz1.me/ss-polipo-pac.html"/>
    <id>https://www.bz1.me/ss-polipo-pac.html</id>
    <published>2016-09-26T14:35:32.000Z</published>
    <updated>2016-12-15T14:31:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>本文将从<strong>代理</strong>教会大家如何科学上网，作为笔记分享，共同学习，一起进步。</p>
<p>涉及如下三大块内容：</p>
<ul>
<li>shadowsocks（国外+国内）</li>
<li>polipo</li>
<li>pac </li>
</ul>
<h2 id="服务端安装-shadowsocks"><a href="#服务端安装-shadowsocks" class="headerlink" title="服务端安装 shadowsocks"></a>服务端安装 shadowsocks</h2><p>ubuntu 14.04<br>1.由于 <code>shadowsocks</code> 是基于 <code>Python</code> 开发的，所以需要先安装 <code>Python</code></p>
<figure class="highlight q"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="built_in">get</span> <span class="keyword">update</span></div></pre></td></tr></table></figure>
<p>2.安装 <code>Python</code> 的包管理器 <code>pip</code></p>
<figure class="highlight vim"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="built_in">get</span> install <span class="keyword">python</span>-pip</div></pre></td></tr></table></figure>
<p>3.<code>pip</code> 安装好之后，直接安装 <code>shadowsocks</code></p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo pip <span class="keyword">install</span> shadowsocks</div></pre></td></tr></table></figure>
<h3 id="配置-shadowsocks"><a href="#配置-shadowsocks" class="headerlink" title="配置 shadowsocks"></a>配置 shadowsocks</h3><p>在 <code>/etc/</code> 下新建一个文件 <code>shadowsocks.json</code></p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"server"</span><span class="symbol">:<span class="string">"0.0.0.0"</span></span>,             <span class="comment">#服务器 ip（ the ip your server listens ）</span></div><div class="line">    <span class="string">"server_port"</span><span class="symbol">:&lt;</span>端口号<span class="number">1</span>&gt;,         <span class="comment">#客户端连接端口，本地侦听</span></div><div class="line">    <span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,   <span class="comment">#本地代理地址( the address your local listen )</span></div><div class="line">    <span class="string">"local_port"</span><span class="symbol">:&lt;</span>端口号<span class="number">2</span>&gt;,          <span class="comment">#自己设定的端口号( local port 127.0.0.1)</span></div><div class="line">    <span class="string">"password"</span><span class="symbol">:<span class="string">"&lt;password&gt;"</span></span>,        <span class="comment">#客户端连接密码</span></div><div class="line">    <span class="string">"timeout"</span><span class="symbol">:</span><span class="number">300</span>,                  <span class="comment">#超时时间</span></div><div class="line">    <span class="string">"method"</span><span class="symbol">:<span class="string">"aes-256-cfb"</span></span>,         <span class="comment">#加密方式</span></div><div class="line">    <span class="string">"fast_open"</span>: <span class="keyword">false</span>              <span class="comment">#是否使用 tcp</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<p><strong>注意：</strong>上述的 shadowsocks.json 是在国外的主机上进行的配置</p>
<h3 id="服务端启动-shadowsocks（两种方式）"><a href="#服务端启动-shadowsocks（两种方式）" class="headerlink" title="服务端启动 shadowsocks（两种方式）"></a>服务端启动 shadowsocks（两种方式）</h3><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">第一种</div><div class="line">sudo ssserver -c /etc/shadowsocks.json -d start</div><div class="line"></div><div class="line">第二种</div><div class="line">sudo ssserver -s &lt;Server_ip&gt; -p &lt;端口号<span class="number">1</span>&gt; -k &lt;password&gt; -m &lt;<span class="function"><span class="keyword">method</span>&gt; -<span class="title">d</span> <span class="title">start</span></span></div></pre></td></tr></table></figure>
<h4 id="配置开机自启动"><a href="#配置开机自启动" class="headerlink" title="配置开机自启动"></a>配置开机自启动</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/rc<span class="selector-class">.local</span></div><div class="line"></div><div class="line">添加一条</div><div class="line">sudo ssserver -c /etc/shadowsocks<span class="selector-class">.json</span> -d start</div></pre></td></tr></table></figure>
<h4 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo ssserver -c shadowsocks<span class="selector-class">.json</span> -d stop</div></pre></td></tr></table></figure>
<h3 id="检查日志"><a href="#检查日志" class="headerlink" title="检查日志"></a>检查日志</h3><figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo less /<span class="built_in">var</span>/<span class="keyword">log</span>/shadowsocks.<span class="keyword">log</span></div></pre></td></tr></table></figure>
<h2 id="客户端安装-shadowsocks"><a href="#客户端安装-shadowsocks" class="headerlink" title="客户端安装 shadowsocks"></a>客户端安装 shadowsocks</h2><p>安装方法同服务端，配置有点区别<br>这里是 <code>shadowsocks.json</code> 的配置：</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="string">"server"</span><span class="symbol">:<span class="string">"&lt;Server_ip&gt;"</span></span>,         <span class="comment">#连接国外服务器的 ip</span></div><div class="line">    <span class="string">"server_port"</span><span class="symbol">:&lt;</span>端口号<span class="number">1</span>&gt;,         <span class="comment">#连接国外服务器的端口</span></div><div class="line">    <span class="string">"local_address"</span><span class="symbol">:<span class="string">"0.0.0.0"</span></span>,      <span class="comment">#表示侦听来自所有 ip 的请求</span></div><div class="line">    <span class="string">"local_port"</span><span class="symbol">:&lt;</span>端口号<span class="number">3</span>&gt;,          <span class="comment">#socks5侦听的端口（polipo 中 socksParentProxy）</span></div><div class="line">    <span class="string">"password"</span><span class="symbol">:<span class="string">"&lt;key&gt;"</span></span>,             <span class="comment">#连接服务器的密码</span></div><div class="line">    <span class="string">"timeout"</span><span class="symbol">:</span><span class="number">300</span>,</div><div class="line">    <span class="string">"method"</span><span class="symbol">:<span class="string">"aes-256-cfb"</span></span>,</div><div class="line">    <span class="string">"fast_open"</span><span class="symbol">:false</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="客户端启动-shadowsocks（两种方法）"><a href="#客户端启动-shadowsocks（两种方法）" class="headerlink" title="客户端启动 shadowsocks（两种方法）"></a>客户端启动 shadowsocks（两种方法）</h3><figure class="highlight oxygene"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">第一种</div><div class="line">sudo sslocal -c /etc/shadowsocks.json -d restart</div><div class="line"></div><div class="line">第二种</div><div class="line">sudo sslocal -s &lt;Server_ip&gt; -p &lt;端口号<span class="number">1</span>&gt; -k &lt;password&gt; -m &lt;<span class="function"><span class="keyword">method</span>&gt; -<span class="title">b</span> 0.0.0.0 -<span class="title">l</span> &lt;端口号3&gt; -<span class="title">d</span> <span class="title">start</span></span></div></pre></td></tr></table></figure>
<p>这样执行以后这台主机就会连接到国外的主机，并开始侦听<code>&lt;端口号3&gt;</code>的 socks5代理了</p>
<h4 id="配置开机自启动-1"><a href="#配置开机自启动-1" class="headerlink" title="配置开机自启动"></a>配置开机自启动</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/rc<span class="selector-class">.local</span></div><div class="line"></div><div class="line">添加一条</div><div class="line">sudo sslocal -c /etc/shadowsocks<span class="selector-class">.json</span> -d restart</div></pre></td></tr></table></figure>
<h4 id="停止-1"><a href="#停止-1" class="headerlink" title="停止"></a>停止</h4><figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo sslocal -c /etc/shadowsocks<span class="selector-class">.json</span> -d stop</div></pre></td></tr></table></figure>
<p><strong>至此，shadowsocks 的配置就结束了。</strong></p>
<h2 id="polipo"><a href="#polipo" class="headerlink" title="polipo"></a>polipo</h2><blockquote>
<p><a href="https://wiki.archlinux.org/index.php/Polipo_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87" target="_blank" rel="external">polipo 简介</a>)<br>Polipo 是一个小而快速的缓存 web 代理程序(web 缓存, HTTP 代理, 代理服务器)，可以将 socks5代理转换为 http 代理</p>
</blockquote>
<h3 id="安装-polipo"><a href="#安装-polipo" class="headerlink" title="安装 polipo"></a>安装 polipo</h3><p>ubuntu 14.04</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo apt-<span class="keyword">get</span> install polipo</div></pre></td></tr></table></figure>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>/etc/polipo/config<br>在配置文件中新增如下内容</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="attr">logSyslog</span> = <span class="literal">true</span>                        </div><div class="line"><span class="attr">logFile</span> = /var/log/polipo/polipo.log    #日志</div><div class="line"><span class="attr">proxyAddress</span> = <span class="string">"0.0.0.0"</span>                #监听地址，四个<span class="number">0</span>表示匹配所有</div><div class="line"><span class="attr">proxyPort</span> = &lt;端口号<span class="number">4</span>&gt;                    #http 监听端口（同 PAC 配置文件）</div><div class="line"><span class="attr">socksParentProxy</span> = <span class="string">"127.0.0.1:&lt;端口号3&gt;"</span> #指定 `socksProxyType` 的一级代理</div><div class="line"><span class="attr">socksProxyType</span> = socks5                 #代理类型为 `socks5`</div></pre></td></tr></table></figure>
<h3 id="启动-polipo"><a href="#启动-polipo" class="headerlink" title="启动 polipo"></a>启动 polipo</h3><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sudo service polipo <span class="literal">start</span></div></pre></td></tr></table></figure>
<h4 id="配置开机自启动-2"><a href="#配置开机自启动-2" class="headerlink" title="配置开机自启动"></a>配置开机自启动</h4><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo vim /etc/rc.<span class="built_in">local</span></div><div class="line"></div><div class="line">添加一条</div><div class="line">sudo service polipo <span class="built_in">start</span></div></pre></td></tr></table></figure>
<p>至此，polipo 的配置完毕，并且可以本地测试一下是否已经代理到了国外主机</p>
<blockquote>
<p>测试方法：<br>浏览器设置socks5代理(ip为国内服务器，端口为本地侦听的端口3)确认是否通过ss翻墙</p>
</blockquote>
<h3 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h3><h2 id="PAC-文件"><a href="#PAC-文件" class="headerlink" title="PAC 文件"></a>PAC 文件</h2><p>类似绑定 host 去访问国外的网站，通过FindProxyForURL(url, host)这个函数去实现。<br>参数 url：网站 or 链接<br>参数 host：对应的主机名</p>
<h4 id="举例："><a href="#举例：" class="headerlink" title="举例："></a>举例：</h4><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">FindProxyForURL</span><span class="params">(url, host)</span> </span>&#123; <span class="keyword">return</span> <span class="string">"PROXY proxy.example.com:&lt;端口4&gt;; DIRECT"</span>; &#125;</div></pre></td></tr></table></figure>
<p>指定所有通过所有的流量都通过<code>proxy.example.com</code>的<code>端口4</code>代理出去</p>
<h4 id="下载："><a href="#下载：" class="headerlink" title="下载："></a>下载：</h4><p><a href="https://www.bz1.me/a.pac?attname=">点击下载</a></p>
<h4 id="配置："><a href="#配置：" class="headerlink" title="配置："></a>配置：</h4><p><code>PAC</code>文件需要可以被访问，建议放在<a href="portal.qiniu.com">七牛</a>或者<a href="aliyun.com">阿里OSS</a>这样的云存储上</p>
<p>假如是七牛，可以参考七牛的<a href="http://developer.qiniu.com/article/kodo/kodo-first/quickstart.html" target="_blank" rel="external">官方文档</a>进行上传和访问</p>
<p>生成的模板如下：<br><code>http://domain/a.pac</code></p>
<h3 id="配置在-MAC-上"><a href="#配置在-MAC-上" class="headerlink" title="配置在 MAC 上"></a>配置在 MAC 上</h3><p>打开<strong>系统偏好设置</strong>，选择<strong>网络</strong><br><img src="https://upload.bz1.me/macproxy.png" alt="macproxy"></p>
<p>选择<strong>高级</strong><br><img src="https://upload.bz1.me/gaojiproxy.png" alt="gaojiproxy"></p>
<p>选择<strong>代理</strong>，选择<strong>自动代理设置</strong>，URL 处填写 PAC 文件的访问地址<br><img src="https://upload.bz1.me/zidongproxy.png" alt=""></p>
<h3 id="配置在-IOS-手机上"><a href="#配置在-IOS-手机上" class="headerlink" title="配置在 IOS 手机上"></a>配置在 IOS 手机上</h3><p>打开<strong>设置</strong>==&gt;<strong>无线局域网</strong>，点击箭头所指位置<br><img src="https://upload.bz1.me/qiniu5G.png" alt="wifi"></p>
<p>在最下面的 HTTP 代理中选择<strong>自动</strong><br><img src="https://upload.bz1.me/httpproxypac.png" alt="httpproxypac"></p>
<p>此时，MAC 和 IOS 都可以科学上网啦~~~</p>
<p>更多方式进行代理请参考 <a href="https://tyr.gift/pac-proxy.html" target="_blank" rel="external">关于PAC自动代理和ios翻墙</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文将从&lt;strong&gt;代理&lt;/strong&gt;教会大家如何科学上网，作为笔记分享，共同学习，一起进步。&lt;/p&gt;
&lt;p&gt;涉及如下三大块内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;shadowsocks（国外+国内）&lt;/li&gt;
&lt;li&gt;polipo&lt;/li&gt;
&lt;li&gt;pac &lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;服务端安装-shadowsocks&quot;&gt;&lt;a href=&quot;#服务端安装-shadowsocks&quot; class=&quot;headerlink&quot; title=&quot;服务端安装 shadowsocks&quot;&gt;&lt;/a&gt;服务端安装 shadowsocks&lt;/h2&gt;&lt;p&gt;ubuntu 14.04&lt;br&gt;1.由于 &lt;code&gt;shadowsocks&lt;/code&gt; 是基于 &lt;code&gt;Python&lt;/code&gt; 开发的，所以需要先安装 &lt;code&gt;Python&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight q&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;update&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.安装 &lt;code&gt;Python&lt;/code&gt; 的包管理器 &lt;code&gt;pip&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo apt-&lt;span class=&quot;built_in&quot;&gt;get&lt;/span&gt; install &lt;span class=&quot;keyword&quot;&gt;python&lt;/span&gt;-pip&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3.&lt;code&gt;pip&lt;/code&gt; 安装好之后，直接安装 &lt;code&gt;shadowsocks&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight cmake&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sudo pip &lt;span class=&quot;keyword&quot;&gt;install&lt;/span&gt; shadowsocks&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;配置-shadowsocks&quot;&gt;&lt;a href=&quot;#配置-shadowsocks&quot; class=&quot;headerlink&quot; title=&quot;配置 shadowsocks&quot;&gt;&lt;/a&gt;配置 shadowsocks&lt;/h3&gt;&lt;p&gt;在 &lt;code&gt;/etc/&lt;/code&gt; 下新建一个文件 &lt;code&gt;shadowsocks.json&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight elixir&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;server&quot;&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;span class=&quot;string&quot;&gt;&quot;0.0.0.0&quot;&lt;/span&gt;&lt;/span&gt;,             &lt;span class=&quot;comment&quot;&gt;#服务器 ip（ the ip your server listens ）&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;server_port&quot;&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&amp;lt;&lt;/span&gt;端口号&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;gt;,         &lt;span class=&quot;comment&quot;&gt;#客户端连接端口，本地侦听&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;local_address&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,   &lt;span class=&quot;comment&quot;&gt;#本地代理地址( the address your local listen )&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;local_port&quot;&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&amp;lt;&lt;/span&gt;端口号&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&amp;gt;,          &lt;span class=&quot;comment&quot;&gt;#自己设定的端口号( local port 127.0.0.1)&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;password&quot;&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;password&amp;gt;&quot;&lt;/span&gt;&lt;/span&gt;,        &lt;span class=&quot;comment&quot;&gt;#客户端连接密码&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;timeout&quot;&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;,                  &lt;span class=&quot;comment&quot;&gt;#超时时间&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;method&quot;&lt;/span&gt;&lt;span class=&quot;symbol&quot;&gt;:&lt;span class=&quot;string&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;&lt;/span&gt;,         &lt;span class=&quot;comment&quot;&gt;#加密方式&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;fast_open&quot;&lt;/span&gt;: &lt;span class=&quot;keyword&quot;&gt;false&lt;/span&gt;              &lt;span class=&quot;comment&quot;&gt;#是否使用 tcp&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="linux" scheme="https://www.bz1.me/categories/linux/"/>
    
    
      <category term="proxy" scheme="https://www.bz1.me/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>tlock</title>
    <link href="https://www.bz1.me/tlock.html"/>
    <id>https://www.bz1.me/tlock.html</id>
    <published>2016-08-30T03:23:34.000Z</published>
    <updated>2016-12-08T14:34:28.000Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>七牛直播域名图解</title>
    <link href="https://www.bz1.me/livedomain.html"/>
    <id>https://www.bz1.me/livedomain.html</id>
    <published>2016-08-18T13:56:25.000Z</published>
    <updated>2016-12-14T05:56:18.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="七牛直播域名"><a href="#七牛直播域名" class="headerlink" title="七牛直播域名"></a>七牛直播域名</h1><p>如图所示：</p>
<ul>
<li>rtmp推流域名</li>
<li>rtmp播放域名</li>
<li>hls播放域名</li>
<li>flv播放域名</li>
</ul>
<p>所对应地址及其组成格式</p>
<p><img src="https://upload.bz1.me/tu.png" alt=""></p>
<p>开通七牛云直播，欢迎访问：<a href="http://www.qiniu.com/" target="_blank" rel="external">http://www.qiniu.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;七牛直播域名&quot;&gt;&lt;a href=&quot;#七牛直播域名&quot; class=&quot;headerlink&quot; title=&quot;七牛直播域名&quot;&gt;&lt;/a&gt;七牛直播域名&lt;/h1&gt;&lt;p&gt;如图所示：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rtmp推流域名&lt;/li&gt;
&lt;li&gt;rtmp播放域名&lt;/li&gt;
&lt;li
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="pili" scheme="https://www.bz1.me/tags/pili/"/>
    
  </entry>
  
  <entry>
    <title>配置CDN加速域名时CNAME与A记录冲突原因及解决方式</title>
    <link href="https://www.bz1.me/%E5%9F%9F%E5%90%8Da%E8%AE%B0%E5%BD%95%E5%92%8Ccname%E5%86%B2%E7%AA%81.html"/>
    <id>https://www.bz1.me/域名a记录和cname冲突.html</id>
    <published>2016-07-25T08:45:07.000Z</published>
    <updated>2016-12-14T05:53:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>假如用户的主页为www.xxx.com，为了使用CDN加速，在七牛也绑定了加速域名为www.xxx.com，绑定好了之后，七牛返回给用户一个CNAME的地址，此时用户去域名提供商那边去配置CNAME，然后提示 “CNAME记录与主机记录的A记录冲突，无法保存成功”<br><img src="https://upload.bz1.me/cname冲突.png" alt=""></p>
<h2 id="问题原因"><a href="#问题原因" class="headerlink" title="问题原因"></a>问题原因</h2><p>A记录就是把一个域名解析到一个IP地址（Address，特制数字IP地址），而CNAME记录就是把域名解析到另外一个域名。其功能是差不多，CNAME将几个主机名指向一个别名，其实跟指向IP地址是一样的，因为这个别名也要做一个A记录的。<br><strong>这两个都是将您的当前域名（www.xxx.com）去解析到一个IP或者一个服务器，当访问您当前域名的时候会解析过去，但是一个域名不可以解析到两个服务器。</strong><br><a id="more"></a></p>
<h2 id="规避方式"><a href="#规避方式" class="headerlink" title="规避方式"></a>规避方式</h2><p>本文提供两种方式来解决既想使用CDN加速，又想使用www的域名。</p>
<h3 id="方式一：直接使用CDN加速，不使用对象存储"><a href="#方式一：直接使用CDN加速，不使用对象存储" class="headerlink" title="方式一：直接使用CDN加速，不使用对象存储"></a>方式一：直接使用CDN加速，不使用对象存储</h3><p>1.在七牛绑定了www.xxx.com的域名<br><img src="https://upload.bz1.me/加速.png" alt=""><br>2.源站配置中选择IP地址，并且提供一下源站可访问的一个文件名（通过<em>http://<ip>/文件名</ip></em> 可访问），然后点击测试，测试通过变为绿色字样即可。<br><img src="https://upload.bz1.me/cdnconf.png" alt=""><br>3.等候七牛处理完毕，并返回CNAME地址<br><img src="https://upload.bz1.me/cnameconff.png" alt=""><br>4.到域名提供上那边进行CNAME<br><img src="https://upload.bz1.me/ali.png" alt=""><br>配置完毕，www.xxx.com开启了CDN加速</p>
<h3 id="方式二：使用七牛镜像存储"><a href="#方式二：使用七牛镜像存储" class="headerlink" title="方式二：使用七牛镜像存储"></a>方式二：使用七牛镜像存储</h3><p>1.删除您域名提供商那边主机记录为www的A记录和CNAME<br>2.配置test.xxx.com，配置A记录主机记录www，记录值为您的服务器IP<br><img src="https://upload.bz1.me/dfsfsdf.png" alt=""><br>3.在七牛绑定www.xxx.com的域名<br><img src="https://upload.bz1.me/加速.png" alt=""><br>4.源站配置中选择七牛云存储，选定一个bucket，选择创建<br><img src="https://upload.bz1.me/ceshi.png" alt=""><br>5.等候七牛处理完毕，并返回CNAME地址<br><img src="https://upload.bz1.me/cnameconff.png" alt=""><br>6.到域名提供上那边进行CNAME<br><img src="https://upload.bz1.me/ali.png" alt=""><br>7.进入对应的bucket，选择镜像存储<br><img src="https://upload.bz1.me/kongjianjingxiang.png" alt=""><br>8.镜像源填写您的源站域名 test.xxx.com<br><img src="https://upload.bz1.me/ddserwef.png" alt=""><br>配置完毕，通过www.xxx.com便可访问您的源站（服务器）</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;假如用户的主页为www.xxx.com，为了使用CDN加速，在七牛也绑定了加速域名为www.xxx.com，绑定好了之后，七牛返回给用户一个CNAME的地址，此时用户去域名提供商那边去配置CNAME，然后提示 “CNAME记录与主机记录的A记录冲突，无法保存成功”&lt;br&gt;&lt;img src=&quot;https://upload.bz1.me/cname冲突.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;问题原因&quot;&gt;&lt;a href=&quot;#问题原因&quot; class=&quot;headerlink&quot; title=&quot;问题原因&quot;&gt;&lt;/a&gt;问题原因&lt;/h2&gt;&lt;p&gt;A记录就是把一个域名解析到一个IP地址（Address，特制数字IP地址），而CNAME记录就是把域名解析到另外一个域名。其功能是差不多，CNAME将几个主机名指向一个别名，其实跟指向IP地址是一样的，因为这个别名也要做一个A记录的。&lt;br&gt;&lt;strong&gt;这两个都是将您的当前域名（www.xxx.com）去解析到一个IP或者一个服务器，当访问您当前域名的时候会解析过去，但是一个域名不可以解析到两个服务器。&lt;/strong&gt;&lt;br&gt;
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="portal" scheme="https://www.bz1.me/tags/portal/"/>
    
  </entry>
  
  <entry>
    <title>RTMP可以播放，但是HLS不可以播放</title>
    <link href="https://www.bz1.me/hlscannotplay.html"/>
    <id>https://www.bz1.me/hlscannotplay.html</id>
    <published>2016-07-14T03:32:20.000Z</published>
    <updated>2016-12-14T05:55:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>问题描述</strong>：在七牛云开通了直播服务，创建了直播空间，也进行了CNAME，在使用七牛的提供的rtmp推流地址推流时，在拉流播放时候，发现RTMP播放域名可以播放，但是HLS却无法播放。</p>
<p><strong>问题原因</strong>：这样的报错原因基本为以下三种之一<br><strong>原因一：</strong>检查一下推流地址是否填写的是RTMP的播放地址，导致RTMP可以正常播放，但是HLS不能，后台也查不到有推流上来。</p>
<a id="more"></a>
<p><strong>原因二：</strong>编码原因，当用户推送的流不是h264 + acc/mp3 的视频 + 音频编码格式的时候，rtmp/hdl可能会可以播放，但是hls播放不了因为不是h264 + acc/mp3 的话，不会触发切片，即没有ts文件生成，所以hls 和回放点播都用不了可以调用 ffplay来播放 rtmp/hdl 来观看视频的编码格式</p>
<p><strong>原因三：</strong>查看一下media域名的CNAME配置，看下是否配置错误或者没有配置。切片服务有问题。</p>
<p><strong>原因四：</strong>crossdomain.xml 缺失在直播对应空间里面</p>
<p><strong>原因五：</strong> ts文件对应域名没有取消302跳转</p>
<p><strong>解决方法</strong>：<br><strong>一：</strong>使用该地址进行推流。</p>
<p><img src="https://upload.bz1.me/blob.png" alt=""></p>
<p>二：对视频进行转码，转成h264 + acc/mp3 的视频 + 音频编码格式然后再推，转码接口参考：<a href="http://developer.qiniu.com/code/v6/api/dora-api/av/avthumb.html" target="_blank" rel="external">http://developer.qiniu.com/code/v6/api/dora-api/av/avthumb.html</a></p>
<p><strong>三：</strong>dig一下media的域名CNAME，检查到该域名是否进行了正确的CNAME。</p>
<p><img src="https://upload.bz1.me/media.png" alt="dd"></p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">~ » dig +short pili-media<span class="selector-class">.live</span><span class="selector-class">.bz1</span><span class="selector-class">.me</span>                           </div><div class="line"><span class="number">1000117</span><span class="selector-class">.media</span><span class="selector-class">.z1</span><span class="selector-class">.pili</span><span class="selector-class">.qiniudns</span><span class="selector-class">.com</span>.</div><div class="line">wsall<span class="selector-class">.qiniu</span><span class="selector-class">.hls</span><span class="selector-class">.wscdns</span><span class="selector-class">.com</span>.</div><div class="line">qiniu<span class="selector-class">.livevideo</span><span class="selector-class">.ourwebat</span><span class="selector-class">.com</span>.</div><div class="line"><span class="number">118.212</span>.<span class="number">138.191</span></div></pre></td></tr></table></figure>
<p><strong>四：</strong>上传该crossdomain.xml 放入直播空间 <a href="http://kb-static.qiniucdn.com/crossdomain.xml?attname=" target="_blank" rel="external">点我下载</a> </p>
<p><strong>五：</strong>提交工单提供一下media的域名，取消302</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;问题描述&lt;/strong&gt;：在七牛云开通了直播服务，创建了直播空间，也进行了CNAME，在使用七牛的提供的rtmp推流地址推流时，在拉流播放时候，发现RTMP播放域名可以播放，但是HLS却无法播放。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;问题原因&lt;/strong&gt;：这样的报错原因基本为以下三种之一&lt;br&gt;&lt;strong&gt;原因一：&lt;/strong&gt;检查一下推流地址是否填写的是RTMP的播放地址，导致RTMP可以正常播放，但是HLS不能，后台也查不到有推流上来。&lt;/p&gt;
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="PILI" scheme="https://www.bz1.me/tags/PILI/"/>
    
  </entry>
  
  <entry>
    <title>配置CDN的资源访问流程</title>
    <link href="https://www.bz1.me/CDN%E7%AE%80%E5%8D%95%E5%8E%9F%E7%90%86.html"/>
    <id>https://www.bz1.me/CDN简单原理.html</id>
    <published>2016-07-13T14:17:52.000Z</published>
    <updated>2016-12-08T14:34:28.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight gherkin"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">用户      1     CDN            源站</div><div class="line">  |<span class="string">—-----------&gt;</span>|<span class="string">             </span>|</div><div class="line">  |<span class="string">&lt;------------</span>|<span class="string">             </span>|</div><div class="line">  |<span class="string">—-----------&gt;</span>|<span class="string">             </span>|</div><div class="line">  |<span class="string">             </span>|<span class="string">      2      </span>|</div><div class="line">  |<span class="string">             </span>|<span class="string">—-----------&gt;</span>|</div><div class="line">  |<span class="string">      3      </span>|<span class="string">&lt;------------</span>|</div><div class="line">  |<span class="string">&lt;------------</span>|<span class="string">             </span>|</div><div class="line">  |<span class="string">             </span>|<span class="string">             </span>|</div><div class="line">  |<span class="string">      4      </span>|<span class="string">             </span>|</div><div class="line">  |<span class="string">—-----------&gt;</span>|<span class="string">             </span>|</div><div class="line">  |<span class="string">&lt;------------</span>|<span class="string">             </span>|</div><div class="line">  |<span class="string">      5      </span>|<span class="string">             </span>|</div></pre></td></tr></table></figure>
<p>1:用户第一次请求数据，与边缘CDN节点建立连接<br>2:CDN回源站请求资源，源站响应，资源被拉取到CDN节点<br>3:CDN将数据返回给用户，同时缓存在用户边缘CDN节点<br>4:用户再次请求数据<br>5:CDN服务器直接返回缓存在服务器上的数据</p>
]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight gherkin&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="CDN" scheme="https://www.bz1.me/tags/CDN/"/>
    
  </entry>
  
  <entry>
    <title>七牛直播云常见FAQ</title>
    <link href="https://www.bz1.me/pili%E7%9B%B4%E6%92%ADFAQ.html"/>
    <id>https://www.bz1.me/pili直播FAQ.html</id>
    <published>2016-07-13T01:09:00.000Z</published>
    <updated>2016-12-08T14:34:28.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pili直播FAQ–功能"><a href="#pili直播FAQ–功能" class="headerlink" title="pili直播FAQ–功能"></a>pili直播FAQ–功能</h2><ol>
<li><strong>直播卡顿：如何排查直播卡顿问题？</strong><br>当用户提问这种的时候，一般如果不是已知事故，或已知异常。首先需要排除用户自身的网络原因，需要用户提供：</li>
<li>a. 用户观看卡顿的播放地址 。 一个播放地址有很多信息，包括域名、hub、流名，使用hub，可以登录 pili-admin.qiniu.com ，通过hub找到该用户，然后进入到该用户的portal平台后，通过流名找到对应的流信息，通过域名可以判断用户播放域名的线路配置。<br>如果在后台看到推流的码率和帧数信息就起伏不断，可以断定是推流端卡顿。这样就先不用去查播放端，先让用户确认推流端网络情况，并测试上行带宽</li>
<li><p>b. 如果用户推流端正常，需要询问播放端哪里卡，并让用户提供ping播放域名的结果，并提供本地IP和DNS，以及测试上行带宽的数据。 如果用户网络正常，得到用户ping到的节点IP后，最好可以自行绑定hosts到节点上观看看下效果。<br>带宽测速工具：<a href="http://www.speed.net" target="_blank" rel="external">http://www.speed.net</a><br>IP和DNS检测工具：<a href="http://ping.huatuo.qq.com/" target="_blank" rel="external">http://ping.huatuo.qq.com/</a></p>
</li>
<li><p><strong>你们推流地址支持几种鉴权模式？可以详细介绍一下吗？</strong></p>
<a id="more"></a>
<p> publishKey详谈</p>
</li>
</ol>
<ul>
<li><p>a.静态推流地址： </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rtmp://<span class="tag">&lt;<span class="name">push_domain</span>&gt;</span>/<span class="tag">&lt;<span class="name">hub</span>&gt;</span>/<span class="tag">&lt;<span class="name">title</span>&gt;</span>?key=<span class="tag">&lt;<span class="name">publishKey</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>b.动态推流地址：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">rtmp://<span class="tag">&lt;<span class="name">push_domain</span>&gt;</span>/<span class="tag">&lt;<span class="name">hub</span>&gt;</span>/<span class="tag">&lt;<span class="name">title</span>&gt;</span>?nonce=<span class="tag">&lt;<span class="name">ANY_TIME_STAMP</span>&gt;</span>&amp;token=<span class="tag">&lt;<span class="name">token</span>&gt;</span></div><div class="line">``` </div><div class="line"></div><div class="line">动态推流地址，需要签算nonce和token</div><div class="line">推流地址格式: </div><div class="line">```  </div><div class="line">rtmp://<span class="tag">&lt;<span class="name">HubDomain</span>&gt;</span>/<span class="tag">&lt;<span class="name">HubName</span>&gt;</span>/<span class="tag">&lt;<span class="name">StreamTitle</span>&gt;</span>?nonce=<span class="tag">&lt;<span class="name">Nonce</span>&gt;</span>&amp;token=<span class="tag">&lt;<span class="name">PublishToken</span>&gt;</span></div></pre></td></tr></table></figure>
<p>token计算方法为：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">sign:= hmac_sha1("/<span class="tag">&lt;<span class="name">HubName</span>&gt;</span>/<span class="tag">&lt;<span class="name">StreamTitle</span>&gt;</span>?nonce=<span class="tag">&lt;<span class="name">Nonce</span>&gt;</span>&amp;<span class="tag">&lt;<span class="name">OtherKey</span>&gt;</span>=<span class="tag">&lt;<span class="name">OtherValue</span>&gt;</span>", "<span class="tag">&lt;<span class="name">PublishKey</span>&gt;</span>")</div><div class="line">publishToken := url_base64(sign)</div></pre></td></tr></table></figure>
<p>Nonce有效值为比上次推流使用的Nonce大的任意值。</p>
</li>
<li>c.关于publishKey，每个流都有自己的publishKey，静态地址是publishKey 加载URl后面就可以；动态是需要publishKey签算token，token加载URL后面。<br>同时每个hub也绑了一个publishKey。<br>如果你创建流的时候，没指定流的publishKey，那么流的publishKey是随机生成的一串字符串。<br>create stream 和  update stream 方法可以为一个流来专门指定一个流的publishKey</li>
<li><p>d. 如果hub的publishKey已知且推流地址使用的是该publishKey，那么如下推流地址中，title可以在推流的时候任意枚举（即不需要先create stream即可直接推流）</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">rtmp://<span class="tag">&lt;<span class="name">push_domain</span>&gt;</span>/<span class="tag">&lt;<span class="name">hub</span>&gt;</span>/<span class="tag">&lt;<span class="name">title</span>&gt;</span>?key=<span class="tag">&lt;<span class="name">publishKey</span>&gt;</span></div><div class="line">rtmp://<span class="tag">&lt;<span class="name">push_domain</span>&gt;</span>/<span class="tag">&lt;<span class="name">hub</span>&gt;</span>/<span class="tag">&lt;<span class="name">title</span>&gt;</span>?nonce=<span class="tag">&lt;<span class="name">ANY_TIME_STAMP</span>&gt;</span>&amp;token=<span class="tag">&lt;<span class="name">token</span>&gt;</span></div></pre></td></tr></table></figure>
</li>
<li><p>e. 存在另外一种鉴权，为expire，跟dynamic类似。<br>expiry 限时推流地址，首先客户估计一个推流持续有效的时间（推荐为当前时间+30s），然后使用该时间签算token。 publishUrl是 </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">  rtmp://<span class="tag">&lt;<span class="name">HubDomain</span>&gt;</span>/<span class="tag">&lt;<span class="name">HubName</span>&gt;</span>/<span class="tag">&lt;<span class="name">StreamTitle</span>&gt;</span>?expire=<span class="tag">&lt;<span class="name">ExpireAt</span>&gt;</span>&amp;token=<span class="tag">&lt;<span class="name">PublishToken</span>&gt;</span> </div><div class="line">  ``` </div><div class="line"></div><div class="line">ExpireAt为unixstamp，单位为秒。服务器会以服务器时间为准，在此时刻之前，允许推流。超过这个时刻，拒绝推流。 token计算方法为：</div><div class="line">  ```   </div><div class="line">  sign := hmac_sha1("/<span class="tag">&lt;<span class="name">HubName</span>&gt;</span>/<span class="tag">&lt;<span class="name">StreamTitle</span>&gt;</span>?expire=<span class="tag">&lt;<span class="name">ExpireAt</span>&gt;</span>&amp;<span class="tag">&lt;<span class="name">OtherKey</span>&gt;</span>=<span class="tag">&lt;<span class="name">OtherValue</span>&gt;</span>", "<span class="tag">&lt;<span class="name">PublishKey</span>&gt;</span>")</div><div class="line">  publishToken := url_base64(sign)</div></pre></td></tr></table></figure>
</li>
<li><p>f.手机端会自动根据json来生成好推流地址，如果是我们的推流SDK，无需担心，只需要传入json即可。</p>
</li>
<li><p><strong>我的推流软件不允许我输入带?问号的推流地址，请问我该怎么办？</strong></p>
<p>关于hub配成none鉴权<br>登录pili-admin，找到对应用户，点击左侧对应的Uid，跳转后，获得页面内的Access Token。设置none鉴权：</p>
<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">curl <span class="string">"http://pili.qiniuapi.com/v1/hubs/&lt;YOUR_HUB_NAME&gt;"</span> -H <span class="string">"Authorization: Bearer &lt;Access_None&gt;"</span> -d <span class="string">'&#123;"publishSecurity":"none"&#125;'</span></div><div class="line">``` </div><div class="line"></div><div class="line">none鉴权的hub推流方式：</div><div class="line">```   </div><div class="line">rtmp:<span class="comment">//&lt;push_domain&gt;/&lt;hub&gt;/&lt;title&gt;</span></div></pre></td></tr></table></figure>
</li>
</ul>
<p>  title可以不要createstream而容易枚举</p>
<ul>
<li><strong>当前直播域名原生配置：</strong><br>| 加速类型    | 加速域名                 | 回源域名                              | 回源协议 | 特别说明   | 参照域名      |<br>| ——- | ——————– | ——————————— | —- | —— | ——— |<br>| 直播 M3U8 | live-hls.example.com | src.live-hls.z1.pili.qiniudns.com | http | No 302 | qiniu.hls |<br>| 直播 M3U8 | playback.example.com | src.playback.z1.pili.qiniudns.com | http | No 302 | qiniu.hls |<br>| 直播 TS   | media.example.com    | src.media.z1.pili.qiniudns.com    | http | No 302 | qiniu.hls |<br>| 图片 IMG  | static.example.com   | src.static.z1.pili.qiniudns.com   | http |        | qiniu.dn  |</li>
</ul>
<p><strong>主动推流：</strong></p>
<p>RTMP推流域名：<index>.pushcdn-ws.z1.pili.qiniup.com     (ws为网宿缩写，可能是其他CDN厂商，后续再说)<br>RTMP播放域名：live-rtmp.example.com<br>HDL 播放域名: live-hdl.example.com<br>index 进入到用户portal后点域名绑定，能看到cname值的第一个 字符+数字级，即是index值</index></p>
<ol>
<li><strong>为什么我推流结束了，流还持续了一段时间connect状态？</strong><br>timeout机制<br>当一个流正在推的时候，stream.status  可以获取到流的状态为 connected， 当pili持续30秒内没有收到推流端推送来的数据后，流会由connected变为disconnected<br>30秒即为该hub的timeout，30秒的值可以 在用户portal中的应用属性中设置。<br>实际是：<br>用户发数据包到pili的streamgate，streamgate 在发到 Zoned。<br>zoned在30秒内没有收到数据即会将流置为disconnected。<br>由于一次数据可能会延时到10秒才会发送，所以不建议timeout太小。</li>
<li><strong>流状态变化没有回调？</strong><br>流状态回调，用户portal的应用属性可以设置流状态回调url，即用户提供一个URL，然后填入。<br>之后该hub容易流 如果有 disconnect 和connect动作都会触发回调，服务端会调用如下接口回调用户的业务服务器：<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">POST <span class="meta-keyword">/user/</span>callback/endpoint</div><div class="line">X-PILI-MD5: <span class="params">&lt;DataSign&gt;</span></div><div class="line">&#123;</div><div class="line">    <span class="string">"message"</span>: <span class="string">"streamStatus"</span>,</div><div class="line">    <span class="string">"updatedAt"</span>: <span class="string">"&lt;UpdatedAt&gt;"</span>,</div><div class="line">    <span class="string">"data"</span>: &#123;</div><div class="line">        <span class="string">"id"</span>: <span class="string">"&lt;StreamID&gt;"</span>,</div><div class="line">        <span class="string">"url"</span>: <span class="string">"&lt;PublishUrl&gt;"</span>,</div><div class="line">        <span class="string">"status"</span>: <span class="string">"&lt;StreamStatus&gt;"</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>2xx // 通知成功<br>4xx 5xx // 通知失败，之后重试一次，重试后再不成功，放弃通知<br><strong>DataSign 算法</strong>：<br>sign := md5(request.Body) // 原始16字符二进制格式, 而非32字符十六进制数<br>DataSign := urlsafe_base64_encode(sign)<br>PHP:<br>\$dataSign = str<em>replace(array(‘+’, ‘/‘), array(‘-‘, ‘</em>‘), base64_encode(md5($reqBody, true)));<br>Go:<br>hash := md5.New()<br>hash.Write([]byte(request.Body))<br>dataSign := base64.URLEncoding.EncodeToString(hash.Sum(nil))<br>登录跳板机，qlogview，根据流id 过滤BC目录下的  APP_ZONED日志，可以过滤历史回调记录</p>
<blockquote>
<p>注：目前如果在推流过程中调用stream.disabled，streamgate会中断与zoned的任何通信， Zoned是不会将流置为disconnect，且不会触发回调，除非streamgate再与zoned通信，例如用户再触发推流的操作</p>
</blockquote>
<ol>
<li><p><strong>实时截图功能是干什么用的?</strong><br>自动抽帧，可以在portal的应用空间开启，开启后，可以选择生成的图片的名字key的规则<br>当没有设置notifyUrl 和 pipeline的时候，实际调用的是vframe的即时抽帧。抽帧的图片存在直播绑定的空间内。<br>通过 http://<domain>/<key> 就可以访问<br>截图是每个切片产生后就会生成调用一次vframe</key></domain></p>
</li>
<li><p><strong>直播如何实现鉴黄（版本：不得不做 1.0）？</strong><br>① 登录 <a href="https://portal.qiniu.com（新版）" target="_blank" rel="external">https://portal.qiniu.com（新版）</a>  新建一个对象存储空间bucket<br>② 进入到这个对象存储空间内，点击页面上方的更多操作，选择 “镜像存储”,  在镜像源这一行 填入 绑定域名<br>③ 第二步的”绑定域名” 从哪来？ ，登录   <a href="https://pili.qiniu.com" target="_blank" rel="external">https://pili.qiniu.com</a> , 进入hub后， 点击“应用属性”  ， 复制里面的 “截图访问域名”  下对应的域名，填入到第二步里面的 “镜像存储”  中  需要填入的域名<br>④ 通过 <a href="https://pili.qiniu.com" target="_blank" rel="external">https://pili.qiniu.com</a> 里面的实时截图，或者 stream.snapshot(）后，得到截图的链接，假设链接是  <a href="http://pili-img.example.com/hub/test.jpg" target="_blank" rel="external">http://pili-img.example.com/hub/test.jpg</a><br>⑤ 返回<a href="https://portal.qiniu.com，" target="_blank" rel="external">https://portal.qiniu.com，</a> 这个对象存储空间内 ，在域名设置中随便使用一个域名，替换掉 pili-img.example.com<br>⑥  get请求    <a href="http://替换后的域名/hub/test.jpg?nrop" target="_blank" rel="external">http://替换后的域名/hub/test.jpg?nrop</a>  ， 返回的结果详情查看：<a href="http://developer.qiniu.com/code/v6/api/dora-api/third-party/nrop.html" target="_blank" rel="external">http://developer.qiniu.com/code/v6/api/dora-api/third-party/nrop.html</a></p>
</li>
</ol>
<h2 id="pili直播FAQ–服务端"><a href="#pili直播FAQ–服务端" class="headerlink" title="pili直播FAQ–服务端"></a>pili直播FAQ–服务端</h2><ol>
<li><strong>我调用saveas有问题，请问如何可以回播？</strong><br>关于回放另存为</li>
<li>a. 建议用户使用stream.saveas ,stream.playbackUrls 方法已经打算废弃，部分SDK已经实现stream.playbackUrls 内嵌 stream.saveas()。</li>
<li>b. 如果stream.saveas  的 format参数传空值，那么会即时返回m3u8回放地址；  如果format 参数传 非 空值，那么会调用 fop 的avthumb进行转码；（这就需要客户考虑pipeline和notifyUrl等参数了）</li>
<li><p>c. 转码失败情况，可能失败原因：<br>① 传空值失败， 该流没有推流  或 id有误  或  saveas指定 的start 和end 时间段内没有ts内容<br>② 传非空值失败，已经调用过，且第二次调用重名<br>③ 传非空失败，推流分为很多次，且每次推流参数（譬如码率，分辨率，帧数）变化很大</p>
</li>
<li><p><strong>SDK 是否支持水印、数据预处理?</strong><br><strong>iOS 实现</strong><br>两个办法：<br>使用 PLStreamingKit, <a href="https://github.com/pili-engineering/PLStreamingKit" target="_blank" rel="external">https://github.com/pili-engineering/PLStreamingKit</a> 这个 SDK，数据采集都有开发者自己来做；<br>使用 PLCameraStreamingKit，使用 PLCameraStreamingSession 的下面这个回调：<br>/// @abstract 获取到摄像头原数据时的回调, 便于开发者做滤镜、水印等处理<br>(CMSampleBufferRef)cameraStreamingSession:(PLCameraStreamingSession *)session cameraSourceDidGetSampleBuffer:(CMSampleBufferRef)sampleBuffer;<br>PLStreamingKit 与 PLCameraStreamingKit 的差别<br>现在 iOS 推流 SDK 分为 PLStreamingKit 与 PLCameraStreamingKit, 关系和差别：<br>PLStreamingKit 只处理音视频编码和推流<br>PLCameraStreamingKit 依赖 PLStreamingKit<br>PLCameraStreamingKit 比 PLStreamingKit 多了摄像头和麦克风数据采集并且采集部分开源<br>PLCameraStreamingKit 对接比较快，但是不适合做采集部分处理（比如滤镜、降噪等）<br>有采集定制需求推荐用 PLStreamingKit，可以更快的做出需求调整</p>
<p><strong>安卓实现</strong><br>现在仅支持软编版本。数据分为两路，一路用来做显示，一路用来做编码。<br>显示：请实现 SurfaceTextureCallback 该数据源为 SurfaceTexture 的纹理 ID。<br>编码：请实现 StreamingPreviewCallback 该数据源为 NV21 类型的 YUV 数据，你只需要处理 onPreviewFrame 中的 datas 数据即可。<br>详细信息请查看 README 。<br>具体的水印、滤镜效果，需要客户自己实现。</p>
</li>
<li><p><strong>弹幕，字幕，聊天如何在直播里实现?</strong><br>这属于业务需求，Pili 目前没有实现这样的接口<br>最简单的实现方式是浮动一个透明的窗口，上面把字幕信息显示在上面，目前也有很不错的开源解决方案，比如：<br>聊天服务器可以使用 leancloud 的 实时通信服务总览(<a href="https://leancloud.cn/docs/realtime_v2.html" target="_blank" rel="external">https://leancloud.cn/docs/realtime_v2.html</a>)<br>弹幕可以使用 Bilibili/DanmakuFlameMaster(<a href="https://github.com/Bilibili/DanmakuFlameMaster" target="_blank" rel="external">https://github.com/Bilibili/DanmakuFlameMaster</a>)</p>
</li>
</ol>
<h2 id="pili直播FAQ–客户端"><a href="#pili直播FAQ–客户端" class="headerlink" title="pili直播FAQ–客户端"></a>pili直播FAQ–客户端</h2><ol>
<li><strong>为什么我rtmp 和 hdl可以播放， hls不能?</strong><br>a.当用户推送的流不是h264 + acc/mp3 的视频 + 音频编码格式的时候，rtmp/hdl可能会可以播放，但是hls播放不了<br>因为不是h264 + acc/mp3  的话，不会触发切片，即没有ts文件生成，所以hls 和 回放点播都用不了<br>可以调用 ffplay来播放 rtmp/hdl 来观看视频的编码格式<br>b.检查hls域名以及ts文件的media域名的配置</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;pili直播FAQ–功能&quot;&gt;&lt;a href=&quot;#pili直播FAQ–功能&quot; class=&quot;headerlink&quot; title=&quot;pili直播FAQ–功能&quot;&gt;&lt;/a&gt;pili直播FAQ–功能&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;直播卡顿：如何排查直播卡顿问题？&lt;/strong&gt;&lt;br&gt;当用户提问这种的时候，一般如果不是已知事故，或已知异常。首先需要排除用户自身的网络原因，需要用户提供：&lt;/li&gt;
&lt;li&gt;a. 用户观看卡顿的播放地址 。 一个播放地址有很多信息，包括域名、hub、流名，使用hub，可以登录 pili-admin.qiniu.com ，通过hub找到该用户，然后进入到该用户的portal平台后，通过流名找到对应的流信息，通过域名可以判断用户播放域名的线路配置。&lt;br&gt;如果在后台看到推流的码率和帧数信息就起伏不断，可以断定是推流端卡顿。这样就先不用去查播放端，先让用户确认推流端网络情况，并测试上行带宽&lt;/li&gt;
&lt;li&gt;&lt;p&gt;b. 如果用户推流端正常，需要询问播放端哪里卡，并让用户提供ping播放域名的结果，并提供本地IP和DNS，以及测试上行带宽的数据。 如果用户网络正常，得到用户ping到的节点IP后，最好可以自行绑定hosts到节点上观看看下效果。&lt;br&gt;带宽测速工具：&lt;a href=&quot;http://www.speed.net&quot;&gt;http://www.speed.net&lt;/a&gt;&lt;br&gt;IP和DNS检测工具：&lt;a href=&quot;http://ping.huatuo.qq.com/&quot;&gt;http://ping.huatuo.qq.com/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;你们推流地址支持几种鉴权模式？可以详细介绍一下吗？&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="qiniu" scheme="https://www.bz1.me/categories/qiniu/"/>
    
    
      <category term="pili" scheme="https://www.bz1.me/tags/pili/"/>
    
  </entry>
  
</feed>
